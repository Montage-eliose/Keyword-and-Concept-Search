DBIPROXY(1p)          User Contributed Perl Documentation         DBIPROXY(1p)



NNAAMMEE
       dbiproxy - A proxy server for the DBD::Proxy driver

SSYYNNOOPPSSIISS
           dbiproxy <options> --localport=<port>

DDEESSCCRRIIPPTTIIOONN
       This tool is just a front end for the DBI::ProxyServer package. All it
       does is picking options from the command line and calling
       _D_B_I_:_:_P_r_o_x_y_S_e_r_v_e_r_:_:_m_a_i_n_(_). See DBI::ProxyServer for details.

       Available options include:

       ----cchhrroooott==ddiirr
           (UNIX only)  After doing a _b_i_n_d_(_), change root directory to the
           given directory by doing a _c_h_r_o_o_t_(_). This is useful for security,
           but it restricts the environment a lot. For example, you need to
           load DBI drivers in the config file or you have to create hard
           links to Unix sockets, if your drivers are using them. For example,
           with MySQL, a config file might contain the following lines:

               my $rootdir = '/var/dbiproxy';
               my $unixsockdir = '/tmp';
               my $unixsockfile = 'mysql.sock';
               foreach $dir ($rootdir, "$rootdir$unixsockdir") {
                   mkdir 0755, $dir;
               }
               link("$unixsockdir/$unixsockfile",
                    "$rootdir$unixsockdir/$unixsockfile");
               require DBD::mysql;

               {
                   'chroot' => $rootdir,
                   ...
               }

           If you don't know _c_h_r_o_o_t_(_), think of an FTP server where you can
           see a certain directory tree only after logging in. See also the
           --group and --user options.

       ----ccoonnffiiggffiillee==ffiillee
           Config files are assumed to return a single hash ref that overrides
           the arguments of the new method. However, command line arguments in
           turn take precedence over the config file. See the "CONFIGURATION
           FILE" section in the DBI::ProxyServer documentation for details on
           the config file.

       ----ddeebbuugg
           Turn debugging mode on. Mainly this asserts that logging messages
           of level "debug" are created.

       ----ffaacciilliittyy==mmooddee
           (UNIX only) Facility to use for Sys::Syslog. The default is ddaaeemmoonn.

       ----ggrroouupp==ggiidd
           After doing a _b_i_n_d_(_), change the real and effective GID to the
           given.  This is useful, if you want your server to bind to a
           privileged port (<1024), but don't want the server to execute as
           root. See also the --user option.

           GID's can be passed as group names or numeric values.

       ----llooccaallaaddddrr==iipp
           By default a daemon is listening to any IP number that a machine
           has. This attribute allows one to restrict the server to the given
           IP number.

       ----llooccaallppoorrtt==ppoorrtt
           This attribute sets the port on which the daemon is listening. It
           must be given somehow, as there's no default.

       ----llooggffiillee==ffiillee
           Be default logging messages will be written to the syslog (Unix) or
           to the event log (Windows NT). On other operating systems you need
           to specify a log file. The special value "STDERR" forces logging to
           stderr. See Net::Daemon::Log for details.

       ----mmooddee==mmooddeennaammee
           The server can run in three different modes, depending on the
           environment.

           If you are running Perl 5.005 and did compile it for threads, then
           the server will create a new thread for each connection. The thread
           will execute the server's _R_u_n_(_) method and then terminate. This
           mode is the default, you can force it with "--mode=threads".

           If threads are not available, but you have a working _f_o_r_k_(_), then
           the server will behave similar by creating a new process for each
           connection.  This mode will be used automatically in the absence of
           threads or if you use the "--mode=fork" option.

           Finally there's a single-connection mode: If the server has
           accepted a connection, he will enter the _R_u_n_(_) method. No other
           connections are accepted until the _R_u_n_(_) method returns (if the
           client disconnects).  This operation mode is useful if you have
           neither threads nor _f_o_r_k_(_), for example on the Macintosh. For
           debugging purposes you can force this mode with "--mode=single".

       ----ppiiddffiillee==ffiillee
           (UNIX only) If this option is present, a PID file will be created
           at the given location. Default is to not create a pidfile.

       ----uusseerr==uuiidd
           After doing a _b_i_n_d_(_), change the real and effective UID to the
           given.  This is useful, if you want your server to bind to a
           privileged port (<1024), but don't want the server to execute as
           root. See also the --group and the --chroot options.

           UID's can be passed as group names or numeric values.

       ----vveerrssiioonn
           Suppresses startup of the server; instead the version string will
           be printed and the program exits immediately.

AAUUTTHHOORR
           Copyright (c) 1997    Jochen Wiedmann
                                 Am Eisteich 9
                                 72555 Metzingen
                                 Germany

                                 Email: joe@ispsoft.de
                                 Phone: +49 7123 14881

       The DBI::ProxyServer module is free software; you can redistribute it
       and/or modify it under the same terms as Perl itself. In particular
       permission is granted to Tim Bunce for distributing this as a part of
       the DBI.

SSEEEE AALLSSOO
       DBI::ProxyServer, DBD::Proxy, DBI



perl v5.18.1                      2013-11-05                      DBIPROXY(1p)
