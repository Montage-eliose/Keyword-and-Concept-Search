IONICE(1)                        User Commands                       IONICE(1)



NNAAMMEE
       ionice - set or get process I/O scheduling class and priority

SSYYNNOOPPSSIISS
       iioonniiccee [--cc _c_l_a_s_s] [--nn _l_e_v_e_l] [--tt] --pp _P_I_D...
       iioonniiccee [--cc _c_l_a_s_s] [--nn _l_e_v_e_l] [--tt] _c_o_m_m_a_n_d [_a_r_g_u_m_e_n_t...]

DDEESSCCRRIIPPTTIIOONN
       This  program  sets or gets the I/O scheduling class and priority for a
       program.  If no arguments or just --pp is given, iioonniiccee  will  query  the
       current I/O scheduling class and priority for that process.

       When  _c_o_m_m_a_n_d  is  given,  iioonniiccee  will run this command with the given
       arguments.  If no _c_l_a_s_s is specified, then  _c_o_m_m_a_n_d  will  be  executed
       with the "best-effort" scheduling class.  The default priority level is
       4.

       As of this writing, a  process  can  be  in  one  of  three  scheduling
       classes:

       IIddllee   A program running with idle I/O priority will only get disk time
              when no other program has asked for disk I/O for a defined grace
              period.   The  impact  of  an  idle I/O process on normal system
              activity should be zero.  This scheduling class does not take  a
              priority  argument.  Presently, this scheduling class is permit-
              ted for an ordinary user (since kernel 2.6.25).

       BBeesstt--eeffffoorrtt
              This is the effective scheduling class for any process that  has
              not  asked for a specific I/O priority.  This class takes a pri-
              ority argument from _0_-_7, with a lower number being higher prior-
              ity.   Programs  running  at  the  same best-effort priority are
              served in a round-robin fashion.

              Note that before kernel 2.6.26 a process that has not asked  for
              an  I/O  priority  formally uses "nnoonnee" as scheduling class, but
              the I/O scheduler will treat such processes as if it were in the
              best-effort  class.   The  priority within the best-effort class
              will be dynamically derived from  the  CPU  nice  level  of  the
              process: io_priority = (cpu_nice + 20) / 5.

              For  kernels  after 2.6.26 with the CFQ I/O scheduler, a process
              that has not asked for an I/O priority inherits its CPU schedul-
              ing  class.  The I/O priority is derived from the CPU nice level
              of the process (same as before kernel 2.6.26).


       RReeaallttiimmee
              The RT scheduling class is  given  first  access  to  the  disk,
              regardless  of what else is going on in the system.  Thus the RT
              class needs to be used with some care, as it  can  starve  other
              processes.  As with the best-effort class, 8 priority levels are
              defined denoting how big a  time  slice  a  given  process  will
              receive on each scheduling window.  This scheduling class is not
              permitted for an ordinary (i.e., non-root) user.

OOPPTTIIOONNSS
       --cc, ----ccllaassss _c_l_a_s_s
              Specify the name or number of the scheduling class to use; _0 for
              none, _1 for realtime, _2 for best-effort, _3 for idle.

       --nn, ----ccllaassssddaattaa _l_e_v_e_l
              Specify  the  scheduling class data.  This only has an effect if
              the class accepts an argument.  For  realtime  and  best-effort,
              _0_-_7 are valid data (priority levels).

       --pp, ----ppiidd _P_I_D...
              Specify the process IDs of running processes for which to get or
              set the scheduling parameters.

       --tt, ----iiggnnoorree
              Ignore failure to set the requested priority.   If  _c_o_m_m_a_n_d  was
              specified,  run  it  even in case it was not possible to set the
              desired scheduling priority, which can happen  due  to  insuffi-
              cient privileges or an old kernel version.

       --hh, ----hheellpp
              Display help and exit.

       --VV, ----vveerrssiioonn
              Display version information and exit.

EEXXAAMMPPLLEESS
       # iioonniiccee -c 3 -p 89

       Sets process with PID 89 as an idle I/O process.

       # iioonniiccee -c 2 -n 0 bash

       Runs 'bash' as a best-effort program with highest priority.

       # iioonniiccee -p 89 91

       Prints the class and priority of the processes with PID 89 and 91.

NNOOTTEESS
       Linux  supports I/O scheduling priorities and classes since 2.6.13 with
       the CFQ I/O scheduler.

AAUUTTHHOORRSS
       Jens Axboe <jens@axboe.dk>
       Karel Zak <kzak@redhat.com>

AAVVAAIILLAABBIILLIITTYY
       The ionice command is part of the util-linux package and  is  available
       from ftp://ftp.kernel.org/pub/linux/utils/util-linux/.



util-linux                         July 2011                         IONICE(1)
