GPG(1)                         GNU Privacy Guard                        GPG(1)



NNAAMMEE
       ggppgg - OpenPGP encryption and signing tool

SSYYNNOOPPSSIISS
       ggppgg [----hhoommeeddiirr _d_i_r] [----ooppttiioonnss _f_i_l_e] [_o_p_t_i_o_n_s] _c_o_m_m_a_n_d [_a_r_g_s]



DDEESSCCRRIIPPTTIIOONN
       ggppgg  is the OpenPGP part of the GNU Privacy Guard (GnuPG). It is a tool
       to provide digital encryption and signing services  using  the  OpenPGP
       standard.  ggppgg features complete key management and all bells and whis-
       tles you can expect from a decent OpenPGP implementation.

       This is the standalone version of ggppgg.  For desktop use you should con-
       sider  using ggppgg22  ([On some platforms gpg2 is installed under the name
       ggppgg]).








RREETTUURRNN VVAALLUUEE
       The program returns 0 if everything was fine, 1 if at least a signature
       was bad, and other error codes for fatal errors.


WWAARRNNIINNGGSS
       Use  a *good* password for your user account and a *good* passphrase to
       protect your secret key. This passphrase is the  weakest  part  of  the
       whole  system. Programs to do dictionary attacks on your secret keyring
       are very easy to write and  so  you  should  protect  your  "~/.gnupg/"
       directory very well.

       Keep  in mind that, if this program is used over a network (telnet), it
       is *very* easy to spy out your passphrase!

       If you are going to verify detached signatures, make sure that the pro-
       gram  knows about it; either give both filenames on the command line or
       use '-' to specify STDIN.


IINNTTEERROOPPEERRAABBIILLIITTYY
       GnuPG tries to be a very flexible implementation of the  OpenPGP  stan-
       dard. In particular, GnuPG implements many of the optional parts of the
       standard, such as the SHA-512 hash, and the ZLIB and BZIP2  compression
       algorithms.  It  is important to be aware that not all OpenPGP programs
       implement these optional algorithms and that by forcing their  use  via
       the  ----cciipphheerr--aallggoo,  ----ddiiggeesstt--aallggoo,  ----cceerrtt--ddiiggeesstt--aallggoo, or ----ccoommpprreessss--
       aallggoo options in GnuPG, it is  possible  to  create  a  perfectly  valid
       OpenPGP message, but one that cannot be read by the intended recipient.

       There  are dozens of variations of OpenPGP programs available, and each
       supports a slightly different subset of these optional algorithms.  For
       example,  until  recently,  no  (unhacked) version of PGP supported the
       BLOWFISH cipher algorithm. A message using BLOWFISH simply could not be
       read by a PGP user. By default, GnuPG uses the standard OpenPGP prefer-
       ences system that will always do the right thing  and  create  messages
       that  are usable by all recipients, regardless of which OpenPGP program
       they use. Only override this safe default if you really know  what  you
       are doing.

       If you absolutely must override the safe default, or if the preferences
       on a given key are invalid for some reason,  you  are  far  better  off
       using  the ----ppggpp66, ----ppggpp77, or ----ppggpp88 options. These options are safe as
       they do not force any particular algorithms in  violation  of  OpenPGP,
       but rather reduce the available algorithms to a "PGP-safe" list.


CCOOMMMMAANNDDSS
       Commands  are  not  distinguished from options except for the fact that
       only one command is allowed.

       ggppgg may be run with no commands, in which case it will perform  a  rea-
       sonable  action  depending on the type of file it is given as input (an
       encrypted message is decrypted, a signature is verified,  a  file  con-
       taining keys is listed).

       Please remember that option as well as command parsing stops as soon as
       a non-option is encountered, you can explicitly stop parsing  by  using
       the special option ----.






   CCoommmmaannddss nnoott ssppeecciiffiicc ttoo tthhee ffuunnccttiioonn



       ----vveerrssiioonn
              Print  the program version and licensing information.  Note that
              you cannot abbreviate this command.


       ----hheellpp

       --hh     Print a usage message summarizing the most useful  command  line
              options.  Note that you cannot abbreviate this command.


       ----wwaarrrraannttyy
              Print warranty information.


       ----dduummpp--ooppttiioonnss
              Print  a  list of all available options and commands.  Note that
              you cannot abbreviate this command.




   CCoommmmaannddss ttoo sseelleecctt tthhee ttyyppee ooff ooppeerraattiioonn





       ----ssiiggnn

       --ss     Make a signature. This command may be  combined  with  ----eennccrryypptt
              (for  a signed and encrypted message), ----ssyymmmmeettrriicc (for a signed
              and symmetrically encrypted message), or ----eennccrryypptt and ----ssyymmmmeett--
              rriicc  together  (for a signed message that may be decrypted via a
              secret key or a passphrase).  The key to be used for signing  is
              chosen  by  default  or  can  be  set  with the ----llooccaall--uusseerr and
              ----ddeeffaauulltt--kkeeyy options.


       ----cclleeaarrssiiggnn
              Make a clear text signature.  The content in a clear text signa-
              ture  is readable without any special software. OpenPGP software
              is only needed to verify the signature.  Clear  text  signatures
              may  modify end-of-line whitespace for platform independence and
              are not intended to be reversible.  The key to be used for sign-
              ing is chosen by default or can be set with the ----llooccaall--uusseerr and
              ----ddeeffaauulltt--kkeeyy options.



       ----ddeettaacchh--ssiiggnn

       --bb     Make a detached signature.


       ----eennccrryypptt

       --ee     Encrypt data. This option may be combined  with  ----ssiiggnn  (for  a
              signed  and  encrypted message), ----ssyymmmmeettrriicc (for a message that
              may be decrypted via a secret key or a  passphrase),  or  ----ssiiggnn
              and  ----ssyymmmmeettrriicc  together  (for  a  signed  message that may be
              decrypted via a secret key or a passphrase).


       ----ssyymmmmeettrriicc

       --cc     Encrypt with a symmetric cipher using a passphrase. The  default
              symmetric  cipher  used  is  CAST5,  but  may be chosen with the
              ----cciipphheerr--aallggoo option. This option may be  combined  with  ----ssiiggnn
              (for  a  signed  and symmetrically encrypted message), ----eennccrryypptt
              (for a message that may be decrypted  via  a  secret  key  or  a
              passphrase), or ----ssiiggnn and ----eennccrryypptt together (for a signed mes-
              sage that may be decrypted via a secret key or a passphrase).


       ----ssttoorree
              Store only (make a simple RFC1991 literal data packet).


       ----ddeeccrryypptt

       --dd     Decrypt the file given on the command line (or STDIN if no  file
              is specified) and write it to STDOUT (or the file specified with
              ----oouuttppuutt). If the decrypted file is  signed,  the  signature  is
              also  verified. This command differs from the default operation,
              as it never writes to the filename which is included in the file
              and  it  rejects  files which don't begin with an encrypted mes-
              sage.


       ----vveerriiffyy
              Assume that the first argument is a signed file  or  a  detached
              signature  and  verify it without generating any output. With no
              arguments, the signature packet is read from STDIN.  If  only  a
              sigfile  is  given, it may be a complete signature or a detached
              signature, in which case the signed stuff is expected in a  file
              without  the ".sig" or ".asc" extension.  With more than 1 argu-
              ment, the first should be a detached signature and the remaining
              files are the signed stuff. To read the signed stuff from STDIN,
              use '-' as the second filename.  For security reasons a detached
              signature  cannot  read  the  signed material from STDIN without
              denoting it in the above way.

              Note: When verifying a cleartext signature,  ggppgg  verifies  only
              what  makes  up the cleartext signed data and not any extra data
              outside of the cleartext signature  or  header  lines  following
              directly  the dash marker line.  The option ----oouuttppuutt may be used
              to write out the actual signed data; but there  are  other  pit-
              falls with this format as well.  It is suggested to avoid clear-
              text signatures in favor of detached signatures.


       ----mmuullttiiffiillee
              This modifies certain other commands to  accept  multiple  files
              for  processing on the command line or read from STDIN with each
              filename on a separate line. This allows for many  files  to  be
              processed  at once. ----mmuullttiiffiillee may currently be used along with
              ----vveerriiffyy, ----eennccrryypptt, and ----ddeeccrryypptt. Note that ----mmuullttiiffiillee ----vveerr--
              iiffyy may not be used with detached signatures.


       ----vveerriiffyy--ffiilleess
              Identical to ----mmuullttiiffiillee ----vveerriiffyy.


       ----eennccrryypptt--ffiilleess
              Identical to ----mmuullttiiffiillee ----eennccrryypptt.


       ----ddeeccrryypptt--ffiilleess
              Identical to ----mmuullttiiffiillee ----ddeeccrryypptt.


       ----lliisstt--kkeeyyss

       --kk

       ----lliisstt--ppuubblliicc--kkeeyyss
              List  all  keys from the public keyrings, or just the keys given
              on the command line.  --kk is slightly different from  ----lliisstt--kkeeyyss
              in  that  it  allows  only for one argument and takes the second
              argument as the keyring to search.  This  is  for  command  line
              compatibility with PGP 2 and has been removed in ggppgg22.

              Avoid  using the output of this command in scripts or other pro-
              grams as it is likely to change as GnuPG  changes.  See  ----wwiitthh--
              ccoolloonnss  for  a  machine-parseable  key  listing  command that is
              appropriate for use in scripts and other programs.


       ----lliisstt--sseeccrreett--kkeeyyss

       --KK     List all keys from the secret keyrings, or just the  ones  given
              on  the  command  line. A ## after the letters sseecc means that the
              secret key is not usable (for example, if  it  was  created  via
              ----eexxppoorrtt--sseeccrreett--ssuubbkkeeyyss).


       ----lliisstt--ssiiggss
              Same as ----lliisstt--kkeeyyss, but the signatures are listed too.

              For  each  signature  listed, there are several flags in between
              the "sig" tag and keyid. These flags give additional information
              about  each  signature. From left to right, they are the numbers
              1-3 for certificate check level (see ----aasskk--cceerrtt--lleevveell), "L"  for
              a local or non-exportable signature (see ----llssiiggnn--kkeeyy), "R" for a
              nonRevocable signature (see the  ----eeddiitt--kkeeyy  command  "nrsign"),
              "P"  for a signature that contains a policy URL (see ----cceerrtt--ppooll--
              iiccyy--uurrll), "N" for a signature  that  contains  a  notation  (see
              ----cceerrtt--nnoottaattiioonn),  "X" for an eXpired signature (see ----aasskk--cceerrtt--
              eexxppiirree), and the numbers 1-9 or "T" for 10 and above to indicate
              trust signature levels (see the ----eeddiitt--kkeeyy command "tsign").


       ----cchheecckk--ssiiggss
              Same as ----lliisstt--ssiiggss, but the signatures are verified.  Note that
              for performance reasons the revocation status of a  signing  key
              is not shown.

              The  status  of the verification is indicated by a flag directly
              following the "sig" tag (and thus  before  the  flags  described
              above  for ----lliisstt--ssiiggss).  A "!" indicates that the signature has
              been successfully verified, a "-" denotes a bad signature and  a
              "%"  is  used  if an error occurred while checking the signature
              (e.g. a non supported algorithm).




       ----ffiinnggeerrpprriinntt
              List all keys (or the specified ones) along with  their  finger-
              prints.  This  is  the  same  output as ----lliisstt--kkeeyyss but with the
              additional output of a line with the fingerprint.  May  also  be
              combined  with  ----lliisstt--ssiiggss or ----cchheecckk--ssiiggss.  If this command is
              given twice, the fingerprints of all secondary keys  are  listed
              too.


       ----lliisstt--ppaacckkeettss
              List  only  the  sequence  of packets. This is mainly useful for
              debugging.



       ----ccaarrdd--eeddiitt
              Present a menu to work with a smartcard. The  subcommand  "help"
              provides  an  overview  on  available  commands.  For a detailed
              description,    please     see     the     Card     HOWTO     at
              http://www.gnupg.org/documentation/howtos.html#GnuPG-cardHOWTO .


       ----ccaarrdd--ssttaattuuss
              Show the content of the smart card.


       ----cchhaannggee--ppiinn
              Present  a  menu  to allow changing the PIN of a smartcard. This
              functionality is also available as the subcommand "passwd"  with
              the ----ccaarrdd--eeddiitt command.


       ----ddeelleettee--kkeeyy nnaammee
              Remove  key  from the public keyring. In batch mode either ----yyeess
              is required or the key must be specified by fingerprint. This is
              a safeguard against accidental deletion of multiple keys.


       ----ddeelleettee--sseeccrreett--kkeeyy nnaammee
              Remove  key  from the secret keyring. In batch mode the key must
              be specified by fingerprint.


       ----ddeelleettee--sseeccrreett--aanndd--ppuubblliicc--kkeeyy nnaammee
              Same as ----ddeelleettee--kkeeyy, but if a secret key  exists,  it  will  be
              removed  first.  In batch mode the key must be specified by fin-
              gerprint.


       ----eexxppoorrtt
              Either export all keys from all keyrings (default  keyrings  and
              those  registered via option ----kkeeyyrriinngg), or if at least one name
              is given, those of the given name. The new keyring is written to
              STDOUT  or  to the file given with option ----oouuttppuutt. Use together
              with ----aarrmmoorr to mail those keys.


       ----sseenndd--kkeeyyss kkeeyy IIDDss
              Similar to ----eexxppoorrtt but sends the keys to a keyserver.   Finger-
              prints  may  be used instead of key IDs. Option ----kkeeyysseerrvveerr must
              be used to give the name of this keyserver. Don't send your com-
              plete  keyring  to  a keyserver --- select only those keys which
              are new or changed by you.  If no key IDs are  given,  ggppgg  does
              nothing.


       ----eexxppoorrtt--sseeccrreett--kkeeyyss

       ----eexxppoorrtt--sseeccrreett--ssuubbkkeeyyss
              Same  as ----eexxppoorrtt, but exports the secret keys instead.  This is
              normally not very useful and a security risk.  The  second  form
              of  the  command  has  the special property to render the secret
              part of the primary key useless; this  is  a  GNU  extension  to
              OpenPGP  and  other  implementations can not be expected to suc-
              cessfully import such a key.  See the option  ----ssiimmppllee--sskk--cchheecckk--
              ssuumm  if  you  want  to import such an exported key with an older
              OpenPGP implementation.


       ----iimmppoorrtt

       ----ffaasstt--iimmppoorrtt
              Import/merge keys. This adds the given keys to the keyring.  The
              fast version is currently just a synonym.

              There  are  a  few  other options which control how this command
              works.  Most notable here  is  the  ----iimmppoorrtt--ooppttiioonnss  mmeerrggee--oonnllyy
              option  which does not insert new keys but does only the merging
              of new signatures, user-IDs and subkeys.


       ----rreeccvv--kkeeyyss kkeeyy IIDDss
              Import the keys with the given key IDs from a keyserver.  Option
              ----kkeeyysseerrvveerr must be used to give the name of this keyserver.


       ----rreeffrreesshh--kkeeyyss
              Request  updates from a keyserver for keys that already exist on
              the local keyring. This is useful for updating a  key  with  the
              latest signatures, user IDs, etc. Calling this with no arguments
              will refresh the entire keyring. Option ----kkeeyysseerrvveerr must be used
              to  give the name of the keyserver for all keys that do not have
              preferred keyservers  set  (see  ----kkeeyysseerrvveerr--ooppttiioonnss  hhoonnoorr--kkeeyy--
              sseerrvveerr--uurrll).


       ----sseeaarrcchh--kkeeyyss nnaammeess
              Search  the  keyserver for the given names. Multiple names given
              here will be joined together to create the search string for the
              keyserver.   Option ----kkeeyysseerrvveerr must be used to give the name of
              this keyserver.  Keyservers that support different search  meth-
              ods  allow  using the syntax specified in "How to specify a user
              ID" below. Note that different keyserver types support different
              search methods. Currently only LDAP supports them all.


       ----ffeettcchh--kkeeyyss UURRIIss
              Retrieve keys located at the specified URIs. Note that different
              installations of GnuPG may support  different  protocols  (HTTP,
              FTP, LDAP, etc.)


       ----uuppddaattee--ttrruussttddbb
              Do  trust  database  maintenance. This command iterates over all
              keys and builds the Web of Trust. This is an interactive command
              because it may have to ask for the "ownertrust" values for keys.
              The user has to give an estimation of how  far  she  trusts  the
              owner  of  the  displayed  key to correctly certify (sign) other
              keys. GnuPG only asks for the ownertrust value if it has not yet
              been  assigned to a key. Using the ----eeddiitt--kkeeyy menu, the assigned
              value can be changed at any time.


       ----cchheecckk--ttrruussttddbb
              Do trust database maintenance  without  user  interaction.  From
              time  to time the trust database must be updated so that expired
              keys or signatures and the resulting changes in the Web of Trust
              can  be  tracked.  Normally,  GnuPG  will calculate when this is
              required and do it automatically unless  ----nnoo--aauuttoo--cchheecckk--ttrruussttddbb
              is set. This command can be used to force a trust database check
              at any time. The processing is identical to  that  of  ----uuppddaattee--
              ttrruussttddbb but it skips keys with a not yet defined "ownertrust".

              For  use  with cron jobs, this command can be used together with
              ----bbaattcchh in which case the trust database check is done only if a
              check  is  needed.  To  force  a  run even in batch mode add the
              option ----yyeess.



       ----eexxppoorrtt--oowwnneerrttrruusstt
              Send the ownertrust values to STDOUT. This is useful for  backup
              purposes  as  these  values are the only ones which can't be re-
              created from a corrupted trustdb.  Example:
                  gpg --export-ownertrust > otrust.txt



       ----iimmppoorrtt--oowwnneerrttrruusstt
              Update the trustdb with the ownertrust values  stored  in  ffiilleess
              (or  STDIN  if  not given); existing values will be overwritten.
              In case of a severely damaged trustdb and if you have  a  recent
              backup  of the ownertrust values (e.g. in the file '_o_t_r_u_s_t_._t_x_t',
              you may re-create the trustdb using these commands:
                  cd ~/.gnupg
                  rm trustdb.gpg
                  gpg --import-ownertrust < otrust.txt



       ----rreebbuuiilldd--kkeeyyddbb--ccaacchheess
              When updating from version 1.0.6 to 1.0.7 this command should be
              used  to  create  signature  caches  in the keyring. It might be
              handy in other situations too.


       ----pprriinntt--mmdd aallggoo

       ----pprriinntt--mmddss
              Print message digest of algorithm ALGO for all  given  files  or
              STDIN.   With  the  second  form  (or  a deprecated "*" as algo)
              digests for all available algorithms are printed.


       ----ggeenn--rraannddoomm 00||11||22 ccoouunntt
              Emit _c_o_u_n_t random bytes of the given quality level 0, 1 or 2. If
              _c_o_u_n_t  is not given or zero, an endless sequence of random bytes
              will be emitted.  If used with ----aarrmmoorr the output will be base64
              encoded.   PLEASE,  don't  use this command unless you know what
              you are doing; it may remove precious entropy from the system!


       ----ggeenn--pprriimmee mmooddee bbiittss
              Use the source, Luke :-). The output format is still subject  to
              change.



       ----eennaarrmmoorr

       ----ddeeaarrmmoorr
              Pack  or  unpack  an  arbitrary input into/from an OpenPGP ASCII
              armor.  This is a GnuPG extension to OpenPGP and in general  not
              very useful.





   HHooww ttoo mmaannaaggee yyoouurr kkeeyyss


       This section explains the main commands for key management



       ----ggeenn--kkeeyy
              Generate  a  new  key  pair.  This command is normally only used
              interactively.

              There is an experimental feature which allows you to create keys
              in  batch mode. See the file '_d_o_c_/_D_E_T_A_I_L_S' in the source distri-
              bution on how to use this.


       ----ggeenn--rreevvookkee nnaammee
              Generate a revocation  certificate  for  the  complete  key.  To
              revoke a subkey or a signature, use the ----eeddiitt command.


       ----ddeessiigg--rreevvookkee nnaammee
              Generate  a  designated  revocation  certificate for a key. This
              allows a user (with the permission of the keyholder)  to  revoke
              someone else's key.



       ----eeddiitt--kkeeyy
              Present  a  menu which enables you to do most of the key manage-
              ment related tasks.  It expects the specification of  a  key  on
              the command line.



              uuiidd nn  Toggle  selection of user ID or photographic user ID with
                     index nn.  Use ** to select all and 00 to deselect all.


              kkeeyy nn  Toggle selection of subkey with index nn.  Use ** to select
                     all and 00 to deselect all.


              ssiiggnn   Make  a  signature  on key of user nnaammee If the key is not
                     yet signed by the default user (or the users  given  with
                     -u),  the  program  displays  the  information of the key
                     again, together with its fingerprint and asks whether  it
                     should be signed. This question is repeated for all users
                     specified with -u.


              llssiiggnn  Same as "sign"  but  the  signature  is  marked  as  non-
                     exportable  and  will  therefore never be used by others.
                     This may be used to make keys valid  only  in  the  local
                     environment.


              nnrrssiiggnn Same as "sign" but the signature is marked as non-revoca-
                     ble and can therefore never be revoked.


              ttssiiggnn  Make a trust signature. This is a signature that combines
                     the  notions of certification (like a regular signature),
                     and trust (like the "trust"  command).  It  is  generally
                     only useful in distinct communities or groups.

              Note  that "l" (for local / non-exportable), "nr" (for non-revo-
              cable, and "t" (for trust) may be freely mixed and  prefixed  to
              "sign" to create a signature of any type desired.



              ddeellssiigg Delete  a  signature.  Note  that  it  is not possible to
                     retract a signature, once it has been send to the  public
                     (i.e.  to  a  keyserver).   In  that  case you better use
                     rreevvssiigg.


              rreevvssiigg Revoke a signature. For every signature  which  has  been
                     generated by one of the secret keys, GnuPG asks whether a
                     revocation certificate should be generated.


              cchheecckk  Check the signatures on all selected user IDs.


              aadddduuiidd Create an additional user ID.


              aaddddpphhoottoo
                     Create a photographic user ID. This  will  prompt  for  a
                     JPEG  file  that  will be embedded into the user ID. Note
                     that a very large JPEG will make for a  very  large  key.
                     Also  note  that  some  programs  will  display your JPEG
                     unchanged (GnuPG), and some programs will scale it to fit
                     in a dialog box (PGP).


              sshhoowwpphhoottoo
                     Display the selected photographic user ID.


              ddeelluuiidd Delete  a  user ID or photographic user ID.  Note that it
                     is not possible to retract a user id, once  it  has  been
                     send  to  the public (i.e. to a keyserver).  In that case
                     you better use rreevvuuiidd.


              rreevvuuiidd Revoke a user ID or photographic user ID.


              pprriimmaarryy
                     Flag the current user id as the primary one, removes  the
                     primary user id flag from all other user ids and sets the
                     timestamp of  all  affected  self-signatures  one  second
                     ahead. Note that setting a photo user ID as primary makes
                     it primary over other photo user IDs, and setting a regu-
                     lar  user ID as primary makes it primary over other regu-
                     lar user IDs.


              kkeeyysseerrvveerr
                     Set a preferred keyserver for the specified  user  ID(s).
                     This allows other users to know where you prefer they get
                     your key from. See  ----kkeeyysseerrvveerr--ooppttiioonnss  hhoonnoorr--kkeeyysseerrvveerr--
                     uurrll  for  more  on  how  this  works.  Setting a value of
                     "none" removes an existing preferred keyserver.


              nnoottaattiioonn
                     Set a name=value notation for the specified  user  ID(s).
                     See ----cceerrtt--nnoottaattiioonn for more on how this works. Setting a
                     value of "none" removes all notations, setting a notation
                     prefixed with a minus sign (-) removes that notation, and
                     setting a notation name  (without  the  =value)  prefixed
                     with a minus sign removes all notations with that name.


              pprreeff   List  preferences  from  the selected user ID. This shows
                     the actual preferences,  without  including  any  implied
                     preferences.


              sshhoowwpprreeff
                     More  verbose  preferences  listing for the selected user
                     ID. This shows the preferences in effect by including the
                     implied preferences of 3DES (cipher), SHA-1 (digest), and
                     Uncompressed  (compression)  if  they  are  not   already
                     included  in  the  preference list. In addition, the pre-
                     ferred keyserver and signature  notations  (if  any)  are
                     shown.


              sseettpprreeff ssttrriinngg
                     Set the list of user ID preferences to ssttrriinngg for all (or
                     just the selected) user  IDs.  Calling  setpref  with  no
                     arguments sets the preference list to the default (either
                     built-in or set via ----ddeeffaauulltt--pprreeffeerreennccee--lliisstt), and call-
                     ing  setpref  with  "none"  as the argument sets an empty
                     preference list. Use ggppgg  ----vveerrssiioonn  to  get  a  list  of
                     available  algorithms. Note that while you can change the
                     preferences on an attribute user  ID  (aka  "photo  ID"),
                     GnuPG  does  not  select  keys  via attribute user IDs so
                     these preferences will not be used by GnuPG.

                     When setting preferences, you should list the  algorithms
                     in the order which you'd like to see them used by someone
                     else when encrypting a message to your key.  If you don't
                     include  3DES, it will be automatically added at the end.
                     Note that there are many factors that go into choosing an
                     algorithm  (for  example,  your  key  may not be the only
                     recipient), and so the remote OpenPGP  application  being
                     used to send to you may or may not follow your exact cho-
                     sen order for a given message.  It  will,  however,  only
                     choose  an  algorithm  that  is present on the preference
                     list of every recipient key.  See also the INTEROPERABIL-
                     ITY WITH OTHER OPENPGP PROGRAMS section below.


              aaddddkkeeyy Add a subkey to this key.


              aaddddccaarrddkkeeyy
                     Generate a subkey on a card and add it to this key.


              kkeeyyttooccaarrdd
                     Transfer  the  selected secret subkey (or the primary key
                     if no subkey has  been  selected)  to  a  smartcard.  The
                     secret  key  in the keyring will be replaced by a stub if
                     the key could be stored successfully on the card and  you
                     use the save command later. Only certain key types may be
                     transferred to the card. A sub menu allows you to  select
                     on what card to store the key. Note that it is not possi-
                     ble to get that key back from the card - if the card gets
                     broken  your  secret  key  will be lost unless you have a
                     backup somewhere.


              bbkkuuppttooccaarrdd ffiillee
                     Restore the given file to a card.  This  command  may  be
                     used  to  restore  a backup key (as generated during card
                     initialization) to a new card. In almost all  cases  this
                     will  be  the encryption key. You should use this command
                     only with the corresponding public key and make sure that
                     the  file  given  as  argument  is  indeed  the backup to
                     restore. You should then select 2 to restore  as  encryp-
                     tion   key.   You  will  first  be  asked  to  enter  the
                     passphrase of the backup key and then for the  Admin  PIN
                     of the card.


              ddeellkkeeyy Remove a subkey (secondart key). Note that it is not pos-
                     sible to retract a subkey, once it has been send  to  the
                     public  (i.e.  to  a keyserver).  In that case you better
                     use rreevvkkeeyy.


              rreevvkkeeyy Revoke a subkey.


              eexxppiirree Change the key or subkey expiration time. If a subkey  is
                     selected,  the  expiration  time  of  this subkey will be
                     changed. With no selection, the  key  expiration  of  the
                     primary key is changed.


              ttrruusstt  Change  the  owner  trust value for the key. This updates
                     the trust-db immediately and no save is required.


              ddiissaabbllee

              eennaabbllee Disable or enable an entire key. A disabled key  can  not
                     normally be used for encryption.


              aaddddrreevvookkeerr
                     Add  a  designated  revoker  to  the  key. This takes one
                     optional argument: "sensitive". If a  designated  revoker
                     is  marked  as  sensitive,  it  will  not  be exported by
                     default (see export-options).


              ppaasssswwdd Change the passphrase of the secret key.


              ttooggggllee Toggle between public and secret key listing.


              cclleeaann  Compact (by removing all signatures except  the  selfsig)
                     any  user  ID  that is no longer usable (e.g. revoked, or
                     expired). Then, remove any signatures that are not usable
                     by  the  trust  calculations.  Specifically, this removes
                     any signature that does not validate, any signature  that
                     is  superseded  by a later signature, revoked signatures,
                     and signatures issued by keys that are not present on the
                     keyring.


              mmiinniimmiizzee
                     Make  the key as small as possible. This removes all sig-
                     natures from each user ID  except  for  the  most  recent
                     self-signature.


              ccrroossss--cceerrttiiffyy
                     Add  cross-certification  signatures  to  signing subkeys
                     that may not  currently  have  them.  Cross-certification
                     signatures  protect against a subtle attack against sign-
                     ing subkeys. See ----rreeqquuiirree--ccrroossss--cceerrttiiffiiccaattiioonn.  All  new
                     keys  generated  have  this signature by default, so this
                     option is only useful to bring older keys up to date.


              ssaavvee   Save all changes to the key rings and quit.


              qquuiitt   Quit the program without updating the key rings.

              The listing shows you the key with its secondary  keys  and  all
              user  ids.   The  primary  user  id  is  indicated by a dot, and
              selected keys or user ids are indicated  by  an  asterisk.   The
              trust  value is displayed with the primary key: the first is the
              assigned owner trust and the  second  is  the  calculated  trust
              value. Letters are used for the values:



              --      No ownertrust assigned / not yet calculated.


              ee      Trust  calculation has failed; probably due to an expired
                     key.


              qq      Not enough information for calculation.


              nn      Never trust this key.


              mm      Marginally trusted.


              ff      Fully trusted.


              uu      Ultimately trusted.



       ----ssiiggnn--kkeeyy nnaammee
              Signs a public key with your secret key. This is a shortcut ver-
              sion of the subcommand "sign" from ----eeddiitt.


       ----llssiiggnn--kkeeyy nnaammee
              Signs  a  public  key  with your secret key but marks it as non-
              exportable. This is a shortcut version of the subcommand "lsign"
              from ----eeddiitt--kkeeyy.






OOPPTTIIOONNSS
       ggppgg  features  a bunch of options to control the exact behaviour and to
       change the default configuration.


       Long   options   can   be   put   in   an   options    file    (default
       "~/.gnupg/gpg.conf").  Short  option names will not work - for example,
       "armor" is a valid option for the options file, while "a"  is  not.  Do
       not  write  the  2  dashes,  but  simply the name of the option and any
       required arguments. Lines with a hash ('#')  as  the  first  non-white-
       space  character are ignored. Commands may be put in this file too, but
       that is not generally useful as the command will execute  automatically
       with every execution of gpg.

       Please  remember  that  option parsing stops as soon as a non-option is
       encountered, you can explicitly  stop  parsing  by  using  the  special
       option ----.



   HHooww ttoo cchhaannggee tthhee ccoonnffiigguurraattiioonn


       These  options  are  used  to  change the configuration and are usually
       found in the option file.



       ----ddeeffaauulltt--kkeeyy _n_a_m_e
              Use _n_a_m_e as the default key to sign with. If this option is  not
              used,  the  default  key  is  the  first key found in the secret
              keyring.  Note that --uu or ----llooccaall--uusseerr overrides this option.


       ----ddeeffaauulltt--rreecciippiieenntt _n_a_m_e
              Use _n_a_m_e as default recipient if option ----rreecciippiieenntt is not  used
              and don't ask if this is a valid one. _n_a_m_e must be non-empty.


       ----ddeeffaauulltt--rreecciippiieenntt--sseellff
              Use  the  default key as default recipient if option ----rreecciippiieenntt
              is not used and don't ask if this is a valid  one.  The  default
              key is the first one from the secret keyring or the one set with
              ----ddeeffaauulltt--kkeeyy.


       ----nnoo--ddeeffaauulltt--rreecciippiieenntt
              Reset ----ddeeffaauulltt--rreecciippiieenntt and ----ddeeffaauulltt--rreecciippiieenntt--sseellff.


       --vv,, ----vveerrbboossee
              Give more information during  processing.  If  used  twice,  the
              input data is listed in detail.


       ----nnoo--vveerrbboossee
              Reset verbose level to 0.


       --qq,, ----qquuiieett
              Try to be as quiet as possible.


       ----bbaattcchh

       ----nnoo--bbaattcchh
              Use  batch  mode.  Never ask, do not allow interactive commands.
              ----nnoo--bbaattcchh disables this option.  Note that even with a filename
              given  on  the  command  line, gpg might still need to read from
              STDIN (in particular if gpg figures that the input is a detached
              signature  and no data file has been specified).  Thus if you do
              not want to feed data via STDIN, you  should  connect  STDIN  to
              '_/_d_e_v_/_n_u_l_l'.


       ----nnoo--ttttyy
              Make  sure that the TTY (terminal) is never used for any output.
              This option is needed in  some  cases  because  GnuPG  sometimes
              prints warnings to the TTY even if ----bbaattcchh is used.


       ----yyeess  Assume "yes" on most questions.


       ----nnoo   Assume "no" on most questions.



       ----lliisstt--ooppttiioonnss ppaarraammeetteerrss
              This  is  a  space  or comma delimited string that gives options
              used when listing keys and  signatures  (that  is,  ----lliisstt--kkeeyyss,
              ----lliisstt--ssiiggss,  ----lliisstt--ppuubblliicc--kkeeyyss,  ----lliisstt--sseeccrreett--kkeeyyss,  and  the
              ----eeddiitt--kkeeyy functions).  Options can  be  prepended  with  a  nnoo--
              (after  the  two  dashes)  to  give  the  opposite meaning.  The
              options are:



              sshhooww--pphhoottooss
                     Causes ----lliisstt--kkeeyyss, ----lliisstt--ssiiggss, ----lliisstt--ppuubblliicc--kkeeyyss,  and
                     ----lliisstt--sseeccrreett--kkeeyyss  to  display any photo IDs attached to
                     the key.  Defaults to no. See also ----pphhoottoo--vviieewweerr.   Does
                     not  work  with ----wwiitthh--ccoolloonnss: see ----aattttrriibbuuttee--ffdd for the
                     appropriate way to get photo data for scripts  and  other
                     frontends.


              sshhooww--ppoolliiccyy--uurrllss
                     Show policy URLs in the ----lliisstt--ssiiggss or ----cchheecckk--ssiiggss list-
                     ings.  Defaults to no.


              sshhooww--nnoottaattiioonnss

              sshhooww--ssttdd--nnoottaattiioonnss

              sshhooww--uusseerr--nnoottaattiioonnss
                     Show all, IETF standard, or user-defined signature  nota-
                     tions   in  the  ----lliisstt--ssiiggss  or  ----cchheecckk--ssiiggss  listings.
                     Defaults to no.


              sshhooww--kkeeyysseerrvveerr--uurrllss
                     Show any preferred keyserver URL in  the  ----lliisstt--ssiiggss  or
                     ----cchheecckk--ssiiggss listings. Defaults to no.


              sshhooww--uuiidd--vvaalliiddiittyy
                     Display  the  calculated  validity of user IDs during key
                     listings.  Defaults to no.


              sshhooww--uunnuussaabbllee--uuiiddss
                     Show revoked  and  expired  user  IDs  in  key  listings.
                     Defaults to no.


              sshhooww--uunnuussaabbllee--ssuubbkkeeyyss
                     Show   revoked  and  expired  subkeys  in  key  listings.
                     Defaults to no.


              sshhooww--kkeeyyrriinngg
                     Display the keyring name at the head of key  listings  to
                     show  which  keyring  a given key resides on. Defaults to
                     no.


              sshhooww--ssiigg--eexxppiirree
                     Show signature expiration dates (if any)  during  ----lliisstt--
                     ssiiggss or ----cchheecckk--ssiiggss listings. Defaults to no.


              sshhooww--ssiigg--ssuubbppaacckkeettss
                     Include  signature  subpackets  in  the key listing. This
                     option can take an optional argument list of the subpack-
                     ets  to list. If no argument is passed, list all subpack-
                     ets. Defaults to no. This option is only meaningful  when
                     using  ----wwiitthh--ccoolloonnss  along  with ----lliisstt--ssiiggss or ----cchheecckk--
                     ssiiggss.



       ----vveerriiffyy--ooppttiioonnss ppaarraammeetteerrss
              This is a space or comma delimited  string  that  gives  options
              used  when verifying signatures. Options can be prepended with a
              `no-' to give the opposite meaning. The options are:



              sshhooww--pphhoottooss
                     Display any photo IDs present on the key that issued  the
                     signature.  Defaults to no. See also ----pphhoottoo--vviieewweerr.


              sshhooww--ppoolliiccyy--uurrllss
                     Show   policy  URLs  in  the  signature  being  verified.
                     Defaults to no.


              sshhooww--nnoottaattiioonnss

              sshhooww--ssttdd--nnoottaattiioonnss

              sshhooww--uusseerr--nnoottaattiioonnss
                     Show all, IETF standard, or user-defined signature  nota-
                     tions  in  the signature being verified. Defaults to IETF
                     standard.


              sshhooww--kkeeyysseerrvveerr--uurrllss
                     Show any preferred keyserver URL in the  signature  being
                     verified.  Defaults to no.


              sshhooww--uuiidd--vvaalliiddiittyy
                     Display  the  calculated  validity of the user IDs on the
                     key that issued the signature. Defaults to no.


              sshhooww--uunnuussaabbllee--uuiiddss
                     Show revoked and expired user IDs during signature  veri-
                     fication.  Defaults to no.


              sshhooww--pprriimmaarryy--uuiidd--oonnllyy
                     Show  only the primary user ID during signature verifica-
                     tion.  That is all the AKA lines as well as photo Ids are
                     not shown with the signature verification status.


              ppkkaa--llooookkuuppss
                     Enable  PKA lookups to verify sender addresses. Note that
                     PKA is based on DNS, and so enabling this option may dis-
                     close  information  on when and what signatures are veri-
                     fied or to whom data is encrypted. This is similar to the
                     "web bug" described for the auto-key-retrieve feature.


              ppkkaa--ttrruusstt--iinnccrreeaassee
                     Raise  the  trust in a signature to full if the signature
                     passes PKA validation. This option is only meaningful  if
                     pka-lookups is set.


       ----eennaabbllee--llaarrggee--rrssaa

       ----ddiissaabbllee--llaarrggee--rrssaa
              With  --gen-key  and  --batch, enable the creation of larger RSA
              secret keys than is generally recommended  (up  to  8192  bits).
              These large keys are more expensive to use, and their signatures
              and certifications are also larger.


       ----eennaabbllee--ddssaa22

       ----ddiissaabbllee--ddssaa22
              Enable hash truncation for all DSA keys even for old DSA Keys up
              to  1024  bit.   This  is also the default with ----ooppeennppggpp.  Note
              that older versions of GnuPG also required this  flag  to  allow
              the generation of DSA larger than 1024 bit.


       ----pphhoottoo--vviieewweerr ssttrriinngg
              This  is the command line that should be run to view a photo ID.
              "%i" will be expanded to a filename containing the  photo.  "%I"
              does  the  same,  except  the  file will not be deleted once the
              viewer exits.  Other flags are "%k" for the key ID, "%K" for the
              long  key  ID, "%f" for the key fingerprint, "%t" for the exten-
              sion of the image type (e.g. "jpg"), "%T" for the MIME  type  of
              the  image  (e.g.  "image/jpeg"),  "%v" for the single-character
              calculated validity of the image being viewed (e.g.  "f"),  "%V"
              for the calculated validity as a string (e.g.  "full"), and "%%"
              for an actual percent sign. If neither %i  or  %I  are  present,
              then the photo will be supplied to the viewer on standard input.

              The  default  viewer  is  "xloadimage -fork -quiet -title 'KeyID
              0x%k' STDIN". Note that if your  image  viewer  program  is  not
              secure, then executing it from GnuPG does not make it secure.


       ----eexxeecc--ppaatthh ssttrriinngg
              Sets  a list of directories to search for photo viewers and key-
              server helpers. If not provided, keyserver helpers use the  com-
              piled-in  default  directory,  and  photo  viewers use the $PATH
              environment variable.  Note, that on W32 system  this  value  is
              ignored when searching for keyserver helpers.


       ----kkeeyyrriinngg ffiillee
              Add  ffiillee to the current list of keyrings. If ffiillee begins with a
              tilde and a slash, these are replaced by the $HOME directory. If
              the  filename  does  not contain a slash, it is assumed to be in
              the GnuPG home directory ("~/.gnupg" if ----hhoommeeddiirr or  $GNUPGHOME
              is not used).

              Note that this adds a keyring to the current list. If the intent
              is to use the specified keyring alone, use ----kkeeyyrriinngg along  with
              ----nnoo--ddeeffaauulltt--kkeeyyrriinngg.


       ----sseeccrreett--kkeeyyrriinngg ffiillee
              Same as ----kkeeyyrriinngg but for the secret keyrings.


       ----pprriimmaarryy--kkeeyyrriinngg ffiillee
              Designate  ffiillee  as  the primary public keyring. This means that
              newly imported keys (via ----iimmppoorrtt or keyserver ----rreeccvv--ffrroomm) will
              go to this keyring.


       ----ttrruussttddbb--nnaammee ffiillee
              Use  ffiillee  instead of the default trustdb. If ffiillee begins with a
              tilde and a slash, these are replaced by the $HOME directory. If
              the  filename  does  not contain a slash, it is assumed to be in
              the GnuPG home directory ('_~_/_._g_n_u_p_g' if ----hhoommeeddiirr or  $GNUPGHOME
              is not used).



       ----hhoommeeddiirr _d_i_r
              Set the name of the home directory to _d_i_r. If this option is not
              used, the home directory defaults to  '_~_/_._g_n_u_p_g'.   It  is  only
              recognized  when  given  on the command line.  It also overrides
              any home  directory  stated  through  the  environment  variable
              '_G_N_U_P_G_H_O_M_E'  or  (on  Windows  systems) by means of the Registry
              entry _H_K_C_U_\_S_o_f_t_w_a_r_e_\_G_N_U_\_G_n_u_P_G_:_H_o_m_e_D_i_r.

              On Windows systems it is possible to install GnuPG as a portable
              application.  In this case only this command line option is con-
              sidered, all other ways to set a home directory are ignored.

              To install GnuPG as a portable application under Windows, create
              an  empty  file  name '_g_p_g_c_o_n_f_._c_t_l' in the same directory as the
              tool '_g_p_g_c_o_n_f_._e_x_e'.  The root of the installation is  than  that
              directory;  or,  if  '_g_p_g_c_o_n_f_._e_x_e'  has  been installed directly
              below a directory named '_b_i_n', its parent directory.   You  also
              need  to  make sure that the following directories exist and are
              writable:    '_R_O_O_T_/_h_o_m_e'    for    the    GnuPG     home     and
              '_R_O_O_T_/_v_a_r_/_c_a_c_h_e_/_g_n_u_p_g' for internal cache files.



       ----ppccsscc--ddrriivveerr ffiillee
              Use  ffiillee to access the smartcard reader. The current default is
              `libpcsclite.so.1'   for    GLIBC    based    systems,    `/Sys-
              tem/Library/Frameworks/PCSC.framework/PCSC'  for MAC OS X, `win-
              scard.dll' for Windows and `libpcsclite.so' for other systems.


       ----ddiissaabbllee--cccciidd
              Disable the integrated support for CCID compliant readers.  This
              allows  to  fall  back  to  one of the other drivers even if the
              internal CCID driver can handle the reader. Note, that CCID sup-
              port is only available if libusb was available at build time.


       ----rreeaaddeerr--ppoorrtt nnuummbbeerr__oorr__ssttrriinngg
              This  option  may be used to specify the port of the card termi-
              nal. A value of 0 refers to the first serial device;  add  32768
              to  access USB devices. The default is 32768 (first USB device).
              PC/SC or CCID readers might need a string here; run the  program
              in  verbose mode to get a list of available readers. The default
              is then the first reader found.


       ----ddiissppllaayy--cchhaarrsseett nnaammee
              Set the name of the native character set. This is used  to  con-
              vert  some  informational  strings  like  user IDs to the proper
              UTF-8 encoding.  Note that this has nothing to do with the char-
              acter  set  of  data  to  be encrypted or signed; GnuPG does not
              recode user-supplied data. If  this  option  is  not  used,  the
              default  character  set is determined from the current locale. A
              verbosity level of 3 shows the chosen  set.   Valid  values  for
              nnaammee are:



              iissoo--88885599--11
                     This is the Latin 1 set.


              iissoo--88885599--22
                     The Latin 2 set.


              iissoo--88885599--1155
                     This is currently an alias for the Latin 1 set.


              kkooii88--rr The usual Russian set (rfc1489).


              uuttff--88  Bypass  all  translations  and  assume  that  the OS uses
                     native UTF-8 encoding.


       ----uuttff88--ssttrriinnggss

       ----nnoo--uuttff88--ssttrriinnggss
              Assume that command line arguments are given  as  UTF8  strings.
              The  default (----nnoo--uuttff88--ssttrriinnggss) is to assume that arguments are
              encoded in the character set as specified by  ----ddiissppllaayy--cchhaarrsseett.
              These  options  affect all following arguments. Both options may
              be used multiple times.



       ----ooppttiioonnss ffiillee
              Read options from ffiillee and do not try  to  read  them  from  the
              default options file in the homedir (see ----hhoommeeddiirr). This option
              is ignored if used in an options file.


       ----nnoo--ooppttiioonnss
              Shortcut for ----ooppttiioonnss //ddeevv//nnuullll. This option is detected before
              an  attempt to open an option file.  Using this option will also
              prevent the creation of a '_~_/_._g_n_u_p_g' homedir.


       --zz nn

       ----ccoommpprreessss--lleevveell nn

       ----bbzziipp22--ccoommpprreessss--lleevveell nn
              Set compression level to nn for  the  ZIP  and  ZLIB  compression
              algorithms.  The default is to use the default compression level
              of zlib (normally 6). ----bbzziipp22--ccoommpprreessss--lleevveell sets  the  compres-
              sion  level for the BZIP2 compression algorithm (defaulting to 6
              as well). This is a different option from ----ccoommpprreessss--lleevveell since
              BZIP2  uses  a  significant amount of memory for each additional
              compression level.  --zz sets both. A value of 0  for  nn  disables
              compression.


       ----bbzziipp22--ddeeccoommpprreessss--lloowwmmeemm
              Use a different decompression method for BZIP2 compressed files.
              This alternate method uses a bit more than half the memory,  but
              also  runs  at  half the speed. This is useful under extreme low
              memory circumstances when the file was originally compressed  at
              a high ----bbzziipp22--ccoommpprreessss--lleevveell.



       ----mmaannggllee--ddooss--ffiilleennaammeess

       ----nnoo--mmaannggllee--ddooss--ffiilleennaammeess
              Older  version of Windows cannot handle filenames with more than
              one dot. ----mmaannggllee--ddooss--ffiilleennaammeess causes GnuPG to replace  (rather
              than  add  to) the extension of an output filename to avoid this
              problem. This option is off by default and has no effect on non-
              Windows platforms.


       ----aasskk--cceerrtt--lleevveell

       ----nnoo--aasskk--cceerrtt--lleevveell
              When  making  a key signature, prompt for a certification level.
              If this option is not specified, the certification level used is
              set   via  ----ddeeffaauulltt--cceerrtt--lleevveell.  See  ----ddeeffaauulltt--cceerrtt--lleevveell  for
              information on the specific levels and how they are used.  ----nnoo--
              aasskk--cceerrtt--lleevveell disables this option. This option defaults to no.


       ----ddeeffaauulltt--cceerrtt--lleevveell nn
              The default to use for the check level when signing a key.

              0  means  you  make  no particular claim as to how carefully you
              verified the key.

              1 means you believe the key is owned by the person who claims to
              own it but you could not, or did not verify the key at all. This
              is useful for a "persona" verification, where you sign  the  key
              of a pseudonymous user.

              2  means  you  did  casual verification of the key. For example,
              this could mean  that  you  verified  the  key  fingerprint  and
              checked the user ID on the key against a photo ID.

              3  means you did extensive verification of the key. For example,
              this could mean that you verified the key fingerprint  with  the
              owner  of the key in person, and that you checked, by means of a
              hard to forge document with a photo ID (such as a passport) that
              the name of the key owner matches the name in the user ID on the
              key, and finally that you verified (by exchange of  email)  that
              the email address on the key belongs to the key owner.

              Note  that  the examples given above for levels 2 and 3 are just
              that: examples. In the end, it is up to you to decide just  what
              "casual" and "extensive" mean to you.

              This option defaults to 0 (no particular claim).


       ----mmiinn--cceerrtt--lleevveell
              When  building  the  trust database, treat any signatures with a
              certification level below this as invalid. Defaults to 2,  which
              disregards  level 1 signatures. Note that level 0 "no particular
              claim" signatures are always accepted.


       ----ttrruusstteedd--kkeeyy lloonngg kkeeyy IIDD
              Assume that the specified key (which must be given as a  full  8
              byte  key  ID) is as trustworthy as one of your own secret keys.
              This option is useful if you don't want to keep your secret keys
              (or  one  of them) online but still want to be able to check the
              validity of a given recipient's or signator's key.


       ----ttrruusstt--mmooddeell ppggpp||ccllaassssiicc||ddiirreecctt||aallwwaayyss||aauuttoo
              Set what trust model GnuPG should follow. The models are:



              ppggpp    This is the Web of Trust combined with  trust  signatures
                     as  used  in PGP 5.x and later. This is the default trust
                     model when creating a new trust database.


              ccllaassssiicc
                     This is the standard Web of Trust as used in PGP 2.x  and
                     earlier.


              ddiirreecctt Key  validity  is set directly by the user and not calcu-
                     lated via the Web of Trust.


              aallwwaayyss Skip key validation and assume that used keys are  always
                     fully  trusted.  You  generally won't use this unless you
                     are using some external validation  scheme.  This  option
                     also suppresses the "[uncertain]" tag printed with signa-
                     ture checks when there is no evidence that the user ID is
                     bound to the key.


              aauuttoo   Select the trust model depending on whatever the internal
                     trust database says. This is the default model if such  a
                     database already exists.


       ----aauuttoo--kkeeyy--llooccaattee ppaarraammeetteerrss

       ----nnoo--aauuttoo--kkeeyy--llooccaattee
              GnuPG can automatically locate and retrieve keys as needed using
              this option. This happens when encrypting to  an  email  address
              (in  the  "user@example.com"  form), and there are no user@exam-
              ple.com keys on the local keyring.  This option takes any number
              of the following mechanisms, in the order they are to be tried:



              cceerrtt   Locate a key using DNS CERT, as specified in rfc4398.


              ppkkaa    Locate a key using DNS PKA.


              llddaapp   Using DNS Service Discovery, check the domain in question
                     for any LDAP keyservers to use.  If this  fails,  attempt
                     to  locate  the  key  using  the  PGP Universal method of
                     checking 'ldap://keys.(thedomain)'.


              kkeeyysseerrvveerr
                     Locate a key using whatever keyserver  is  defined  using
                     the ----kkeeyysseerrvveerr option.


              kkeeyysseerrvveerr--UURRLL
                     In  addition,  a keyserver URL as used in the ----kkeeyysseerrvveerr
                     option may be used here to  query  that  particular  key-
                     server.


              llooccaall  Locate  the key using the local keyrings.  This mechanism
                     allows to select the order a local key  lookup  is  done.
                     Thus  using  '--auto-key-locate  local'  is  identical to
                     ----nnoo--aauuttoo--kkeeyy--llooccaattee.


              nnooddeeffaauulltt
                     This flag disables the standard local  key  lookup,  done
                     before  any  of the mechanisms defined by the ----aauuttoo--kkeeyy--
                     llooccaattee are tried.  The position of this mechanism in  the
                     list  does  not  matter.   It is not required if llooccaall is
                     also used.



       ----kkeeyyiidd--ffoorrmmaatt sshhoorrtt||00xxsshhoorrtt||lloonngg||00xxlloonngg
              Select how to  display  key  IDs.  "short"  is  the  traditional
              8-character key ID. "long" is the more accurate (but less conve-
              nient) 16-character key ID. Add an "0x" to either to include  an
              "0x"  at  the  beginning  of the key ID, as in 0x99242560.  Note
              that this option is ignored if the option --with-colons is used.


       ----kkeeyysseerrvveerr nnaammee
              Use nnaammee as your keyserver. This is the server that ----rreeccvv--kkeeyyss,
              ----sseenndd--kkeeyyss,  and ----sseeaarrcchh--kkeeyyss will communicate with to receive
              keys from, send keys to, and search for keys on. The  format  of
              the  nnaammee is a URI: `scheme:[//]keyservername[:port]' The scheme
              is the type of keyserver: "hkp" for  the  HTTP  (or  compatible)
              keyservers,  "ldap" for the LDAP keyservers, or "mailto" for the
              Graff email keyserver. Note that your particular installation of
              GnuPG  may  have  other  keyserver types available as well. Key-
              server schemes are case-insensitive. After the  keyserver  name,
              optional  keyserver configuration options may be provided. These
              are the same as the global ----kkeeyysseerrvveerr--ooppttiioonnss from  below,  but
              apply only to this particular keyserver.

              Most  keyservers synchronize with each other, so there is gener-
              ally no need to send keys to more than one server. The keyserver
              hhkkpp::////kkeeyyss..ggnnuuppgg..nneett  uses  round  robin DNS to give a different
              keyserver each time you use it.


       ----kkeeyysseerrvveerr--ooppttiioonnss nnaammee==vvaalluuee11
              This is a space or comma delimited string that gives options for
              the  keyserver. Options can be prefixed with a `no-' to give the
              opposite meaning. Valid import-options or export-options may  be
              used  here as well to apply to importing (----rreeccvv--kkeeyy) or export-
              ing (----sseenndd--kkeeyy) a key from a keyserver. While not  all  options
              are available for all keyserver types, some common options are:



              iinncclluuddee--rreevvookkeedd
                     When searching for a key with ----sseeaarrcchh--kkeeyyss, include keys
                     that are marked on the keyserver as  revoked.  Note  that
                     not  all  keyservers  differentiate  between  revoked and
                     unrevoked keys, and for such keyservers  this  option  is
                     meaningless.  Note  also that most keyservers do not have
                     cryptographic verification of  key  revocations,  and  so
                     turning  this option off may result in skipping keys that
                     are incorrectly marked as revoked.


              iinncclluuddee--ddiissaabblleedd
                     When searching for a key with ----sseeaarrcchh--kkeeyyss, include keys
                     that  are  marked on the keyserver as disabled. Note that
                     this option is not used with HKP keyservers.


              aauuttoo--kkeeyy--rreettrriieevvee
                     This option enables the automatic retrieving of keys from
                     a  keyserver  when verifying signatures made by keys that
                     are not on the local keyring.

                     Note that this option makes a  "web  bug"  like  behavior
                     possible.   Keyserver  operators  can  see which keys you
                     request, so by sending you a message signed  by  a  brand
                     new  key (which you naturally will not have on your local
                     keyring), the operator can tell both your IP address  and
                     the time when you verified the signature.


              hhoonnoorr--kkeeyysseerrvveerr--uurrll
                     When  using  ----rreeffrreesshh--kkeeyyss, if the key in question has a
                     preferred keyserver URL, then  use  that  preferred  key-
                     server to refresh the key from. In addition, if auto-key-
                     retrieve is set, and the signature being verified  has  a
                     preferred  keyserver  URL,  then  use that preferred key-
                     server to fetch the key from. Defaults to yes.


              hhoonnoorr--ppkkaa--rreeccoorrdd
                     If auto-key-retrieve is set, and the signature being ver-
                     ified  has  a PKA record, then use the PKA information to
                     fetch the key. Defaults to yes.


              iinncclluuddee--ssuubbkkeeyyss
                     When receiving a key, include subkeys as  potential  tar-
                     gets.  Note  that  this  option is not used with HKP key-
                     servers, as they do not support retrieving keys by subkey
                     id.


              uussee--tteemmpp--ffiilleess
                     On  most Unix-like platforms, GnuPG communicates with the
                     keyserver helper program via pipes,  which  is  the  most
                     efficient  method. This option forces GnuPG to use tempo-
                     rary files to communicate. On  some  platforms  (such  as
                     Win32 and RISC OS), this option is always enabled.


              kkeeeepp--tteemmpp--ffiilleess
                     If  using  `use-temp-files', do not delete the temp files
                     after using them. This option is useful to learn the key-
                     server  communication  protocol  by reading the temporary
                     files.


              vveerrbboossee
                     Tell the keyserver helper program  to  be  more  verbose.
                     This  option  can  be repeated multiple times to increase
                     the verbosity level.


              ttiimmeeoouutt
                     Tell the keyserver helper program how long  (in  seconds)
                     to  try  and perform a keyserver action before giving up.
                     Note that performing multiple actions at  the  same  time
                     uses  this  timeout  value per action.  For example, when
                     retrieving multiple keys  via  ----rreeccvv--kkeeyyss,  the  timeout
                     applies  separately to each key retrieval, and not to the
                     ----rreeccvv--kkeeyyss command as a whole. Defaults to 30 seconds.


              hhttttpp--pprrooxxyy==vvaalluuee
                     Set the proxy to use for HTTP and HKP  keyservers.   This
                     overrides the "http_proxy" environment variable, if any.



              mmaaxx--cceerrtt--ssiizzee
                     When  retrieving  a key via DNS CERT, only accept keys up
                     to this size.  Defaults to 16384 bytes.


              ddeebbuugg  Turn on debug output in  the  keyserver  helper  program.
                     Note  that  the  details of debug output depends on which
                     keyserver helper program is being used, and in  turn,  on
                     any  libraries  that  the  keyserver  helper program uses
                     internally (libcurl, openldap, etc).


              cchheecckk--cceerrtt
                     Enable certificate checking if the keyserver presents one
                     (for hkps or ldaps).  Defaults to on.


              ccaa--cceerrtt--ffiillee
                     Provide  a  certificate  store  to  override  the  system
                     default.  Only necessary if check-cert  is  enabled,  and
                     the  keyserver is using a certificate that is not present
                     in a system default certificate list.

                     Note that depending on the SSL library that the keyserver
                     helper is built with, this may actually be a directory or
                     a file.


       ----ccoommpplleetteess--nneeeeddeedd nn
              Number of completely trusted users to introduce a new key signer
              (defaults to 1).


       ----mmaarrggiinnaallss--nneeeeddeedd nn
              Number of marginally trusted users to introduce a new key signer
              (defaults to 3)


       ----mmaaxx--cceerrtt--ddeepptthh nn
              Maximum depth of a certification chain (default is 5).


       ----ssiimmppllee--sskk--cchheecckkssuumm
              Secret keys are integrity protected by using a  SHA-1  checksum.
              This  method is part of the upcoming enhanced OpenPGP specifica-
              tion but GnuPG already uses it as a countermeasure against  cer-
              tain  attacks.   Old applications don't understand this new for-
              mat, so this option may be used to switch back to the old behav-
              iour.  Using  this option bears a security risk. Note that using
              this option only takes effect when the secret key is encrypted -
              the simplest way to make this happen is to change the passphrase
              on the key (even changing it to the same value is acceptable).


       ----nnoo--ssiigg--ccaacchhee
              Do not cache the verification status of key signatures.  Caching
              gives a much better performance in key listings. However, if you
              suspect that your public keyring is not save against write modi-
              fications,  you  can  use this option to disable the caching. It
              probably does not make sense to disable it because all  kind  of
              damage can be done if someone else has write access to your pub-
              lic keyring.


       ----nnoo--ssiigg--ccrreeaattee--cchheecckk
              GnuPG normally verifies each signature right after  creation  to
              protect  against bugs and hardware malfunctions which could leak
              out bits from the secret key. This extra verification needs some
              time  (about  115% for DSA keys), and so this option can be used
              to disable it.  However, due to the fact that the signature cre-
              ation  needs  manual  interaction, this performance penalty does
              not matter in most settings.


       ----aauuttoo--cchheecckk--ttrruussttddbb

       ----nnoo--aauuttoo--cchheecckk--ttrruussttddbb
              If GnuPG feels that its information about the Web of  Trust  has
              to be updated, it automatically runs the ----cchheecckk--ttrruussttddbb command
              internally.  This may be a time  consuming  process.  ----nnoo--aauuttoo--
              cchheecckk--ttrruussttddbb disables this option.


       ----uussee--aaggeenntt

       ----nnoo--uussee--aaggeenntt
              Try to use the GnuPG-Agent.  With this option, GnuPG first tries
              to connect to the agent before it asks for a  passphrase.  ----nnoo--
              uussee--aaggeenntt disables this option.


       ----ggppgg--aaggeenntt--iinnffoo
              Override the value of the environment variable 'GPG_AGENT_INFO'.
              This is only used when ----uussee--aaggeenntt has been given.   Given  that
              this option is not anymore used by ggppgg22, it should be avoided if
              possible.


       ----lloocckk--oonnccee
              Lock the databases the first time a lock is requested and do not
              release the lock until the process terminates.


       ----lloocckk--mmuullttiippllee
              Release  the  locks  every  time a lock is no longer needed. Use
              this to override a previous ----lloocckk--oonnccee from a config file.


       ----lloocckk--nneevveerr
              Disable locking entirely. This option should  be  used  only  in
              very special environments, where it can be assured that only one
              process is accessing those  files.  A  bootable  floppy  with  a
              stand-alone  encryption  system will probably use this. Improper
              usage of this option may lead to data and key corruption.


       ----eexxiitt--oonn--ssttaattuuss--wwrriittee--eerrrroorr
              This option will cause write errors on the status FD to  immedi-
              ately  terminate the process. That should in fact be the default
              but it never worked this way and  thus  we  need  an  option  to
              enable  this,  so that the change won't break applications which
              close their end of a status fd connected pipe too  early.  Using
              this  option  along with ----eennaabbllee--pprrooggrreessss--ffiilltteerr may be used to
              cleanly cancel long running gpg operations.


       ----lliimmiitt--ccaarrdd--iinnsseerrtt--ttrriieess nn
              With nn greater than 0 the number of prompts asking to  insert  a
              smartcard  gets limited to N-1. Thus with a value of 1 gpg won't
              at all ask to insert  a  card  if  none  has  been  inserted  at
              startup. This option is useful in the configuration file in case
              an application does not know about  the  smartcard  support  and
              waits ad infinitum for an inserted card.


       ----nnoo--rraannddoomm--sseeeedd--ffiillee
              GnuPG uses a file to store its internal random pool over invoca-
              tions.  This makes random generation faster;  however  sometimes
              write  operations  are  not  desired. This option can be used to
              achieve that with the cost of slower random generation.


       ----nnoo--ggrreeeettiinngg
              Suppress the initial copyright message.


       ----nnoo--sseeccmmeemm--wwaarrnniinngg
              Suppress the warning about "using insecure memory".


       ----nnoo--ppeerrmmiissssiioonn--wwaarrnniinngg
              Suppress the  warning  about  unsafe  file  and  home  directory
              (----hhoommeeddiirr)  permissions.  Note  that the permission checks that
              GnuPG performs are not intended to be authoritative, but  rather
              they  simply  warn  about certain common permission problems. Do
              not assume that the lack of a warning means that your system  is
              secure.

              Note that the warning for unsafe ----hhoommeeddiirr permissions cannot be
              suppressed in the gpg.conf file, as this would allow an attacker
              to  place an unsafe gpg.conf file in place, and use this file to
              suppress warnings about itself. The ----hhoommeeddiirr permissions  warn-
              ing may only be suppressed on the command line.


       ----nnoo--mmddcc--wwaarrnniinngg
              Suppress the warning about missing MDC integrity protection.


       ----rreeqquuiirree--sseeccmmeemm

       ----nnoo--rreeqquuiirree--sseeccmmeemm
              Refuse  to run if GnuPG cannot get secure memory. Defaults to no
              (i.e. run, but give a warning).



       ----rreeqquuiirree--ccrroossss--cceerrttiiffiiccaattiioonn

       ----nnoo--rreeqquuiirree--ccrroossss--cceerrttiiffiiccaattiioonn
              When verifying a signature made from a subkey, ensure  that  the
              cross  certification  "back  signature" on the subkey is present
              and valid.  This protects against a subtle attack  against  sub-
              keys  that  can sign.  Defaults to ----rreeqquuiirree--ccrroossss--cceerrttiiffiiccaattiioonn
              for ggppgg.


       ----eexxppeerrtt

       ----nnoo--eexxppeerrtt
              Allow the user to do certain nonsensical or "silly" things  like
              signing an expired or revoked key, or certain potentially incom-
              patible things like generating unusual key types. This also dis-
              ables  certain  warning  messages about potentially incompatible
              actions. As the name implies, this option is for  experts  only.
              If you don't fully understand the implications of what it allows
              you to do, leave this off. ----nnoo--eexxppeerrtt disables this option.





   KKeeyy rreellaatteedd ooppttiioonnss




       ----rreecciippiieenntt _n_a_m_e

       --rr     Encrypt for user id _n_a_m_e. If this option  or  ----hhiiddddeenn--rreecciippiieenntt
              is  not  specified, GnuPG asks for the user-id unless ----ddeeffaauulltt--
              rreecciippiieenntt is given.


       ----hhiiddddeenn--rreecciippiieenntt _n_a_m_e

       --RR     Encrypt for user ID _n_a_m_e, but hide the key  ID  of  this  user's
              key.  This  option helps to hide the receiver of the message and
              is a limited countermeasure against traffic  analysis.  If  this
              option  or ----rreecciippiieenntt is not specified, GnuPG asks for the user
              ID unless ----ddeeffaauulltt--rreecciippiieenntt is given.


       ----eennccrryypptt--ttoo nnaammee
              Same as ----rreecciippiieenntt but this one is  intended  for  use  in  the
              options  file  and  may  be  used  with  your  own user-id as an
              "encrypt-to-self". These keys are only used when there are other
              recipients  given  either  by use of ----rreecciippiieenntt or by the asked
              user id.  No trust checking is performed for these user ids  and
              even disabled keys can be used.


       ----hhiiddddeenn--eennccrryypptt--ttoo nnaammee
              Same  as  ----hhiiddddeenn--rreecciippiieenntt but this one is intended for use in
              the options file and may be used with your own user-id as a hid-
              den  "encrypt-to-self".  These keys are only used when there are
              other recipients given either by use of ----rreecciippiieenntt  or  by  the
              asked  user  id.   No trust checking is performed for these user
              ids and even disabled keys can be used.


       ----nnoo--eennccrryypptt--ttoo
              Disable the use  of  all  ----eennccrryypptt--ttoo  and  ----hhiiddddeenn--eennccrryypptt--ttoo
              keys.


       ----ggrroouupp nnaammee==vvaalluuee11
              Sets up a named group, which is similar to aliases in email pro-
              grams.  Any time the group name is a recipient (--rr or  ----rreecciippii--
              eenntt),  it  will  be  expanded  to the values specified. Multiple
              groups with the same name are automatically merged into a single
              group.

              The  values are kkeeyy IIDDss or fingerprints, but any key description
              is accepted. Note that a value with spaces in it will be treated
              as  two  different  values. Note also there is only one level of
              expansion --- you cannot make an group that  points  to  another
              group.  When  used from the command line, it may be necessary to
              quote the argument to this option  to  prevent  the  shell  from
              treating it as multiple arguments.


       ----uunnggrroouupp nnaammee
              Remove a given entry from the ----ggrroouupp list.


       ----nnoo--ggrroouuppss
              Remove all entries from the ----ggrroouupp list.


       ----llooccaall--uusseerr _n_a_m_e

       --uu     Use  _n_a_m_e  as  the key to sign with. Note that this option over-
              rides ----ddeeffaauulltt--kkeeyy.


       ----ttrryy--sseeccrreett--kkeeyy _n_a_m_e
              For hidden recipients GPG needs to know  the  keys  to  use  for
              trial  decryption.   The  key  set  with ----ddeeffaauulltt--kkeeyy is always
              tried first, but this is  often  not  sufficient.   This  option
              allows  to  set  more  keys  to  be  used  for trial decryption.
              Although any valid user-id specification may be used for _n_a_m_e it
              makes sense to use at least the long keyid to avoid ambiguities.
              Note that gpg-agent might pop up a pinentry for a lot keys to do
              the  trial  decryption.   If  you want to stop all further trial
              decryption you may use close-window button instead of the cancel
              button.


       ----ttrryy--aallll--sseeccrreettss
              Don't  look  at  the key ID as stored in the message but try all
              secret keys in turn to  find  the  right  decryption  key.  This
              option  forces  the  behaviour  as  used by anonymous recipients
              (created by  using  ----tthhrrooww--kkeeyyiiddss  or  ----hhiiddddeenn--rreecciippiieenntt)  and
              might  come  handy in case where an encrypted message contains a
              bogus key ID.


       ----sskkiipp--hhiiddddeenn--rreecciippiieennttss

       ----nnoo--sskkiipp--hhiiddddeenn--rreecciippiieennttss
              During decryption skip all anonymous  recipients.   This  option
              helps  in the case that people use the hidden recipients feature
              to hide there own encrypt-to key from others.   If  oneself  has
              many  secret keys this may lead to a major annoyance because all
              keys are tried in turn to decrypt soemthing which was not really
              intended for it.  The drawback of this option is that it is cur-
              rently not possible to decrypt a  message  which  includes  real
              anonymous recipients.





   IInnppuutt aanndd OOuuttppuutt




       ----aarrmmoorr

       --aa     Create  ASCII  armored  output.   The  default  is to create the
              binary OpenPGP format.


       ----nnoo--aarrmmoorr
              Assume the input data is not in ASCII armored format.


       ----oouuttppuutt _f_i_l_e

       --oo _f_i_l_e
              Write output to _f_i_l_e.


       ----mmaaxx--oouuttppuutt nn
              This option sets a limit on the number of  bytes  that  will  be
              generated when processing a file. Since OpenPGP supports various
              levels of compression, it is possible that the  plaintext  of  a
              given  message  may  be  significantly  larger than the original
              OpenPGP message. While GnuPG works properly with such  messages,
              there  is often a desire to set a maximum file size that will be
              generated before processing is forced to stop by the OS  limits.
              Defaults to 0, which means "no limit".


       ----iimmppoorrtt--ooppttiioonnss ppaarraammeetteerrss
              This is a space or comma delimited string that gives options for
              importing keys. Options can be prepended with a  `no-'  to  give
              the opposite meaning. The options are:



              iimmppoorrtt--llooccaall--ssiiggss
                     Allow importing key signatures marked as "local". This is
                     not generally useful unless a shared  keyring  scheme  is
                     being used.  Defaults to no.


              rreeppaaiirr--ppkkss--ssuubbkkeeyy--bbuugg
                     During import, attempt to repair the damage caused by the
                     PKS keyserver bug (pre version 0.9.6) that  mangles  keys
                     with  multiple  subkeys. Note that this cannot completely
                     repair the damaged key as some crucial data is removed by
                     the  keyserver,  but  it  does at least give you back one
                     subkey. Defaults to no for regular ----iimmppoorrtt  and  to  yes
                     for keyserver ----rreeccvv--kkeeyyss.


              mmeerrggee--oonnllyy
                     During import, allow key updates to existing keys, but do
                     not allow any new keys to be imported. Defaults to no.


              iimmppoorrtt--cclleeaann
                     After import, compact (remove all signatures  except  the
                     self-signature)  any  user  IDs from the new key that are
                     not usable.  Then, remove any signatures from the new key
                     that  are not usable.  This includes signatures that were
                     issued by keys that are not present on the keyring.  This
                     option  is  the  same  as  running the ----eeddiitt--kkeeyy command
                     "clean" after import. Defaults to no.


              iimmppoorrtt--mmiinniimmaall
                     Import the smallest key possible. This removes all signa-
                     tures  except the most recent self-signature on each user
                     ID. This option is the same  as  running  the  ----eeddiitt--kkeeyy
                     command "minimize" after import.  Defaults to no.


       ----eexxppoorrtt--ooppttiioonnss ppaarraammeetteerrss
              This is a space or comma delimited string that gives options for
              exporting keys. Options can be prepended with a  `no-'  to  give
              the opposite meaning. The options are:



              eexxppoorrtt--llooccaall--ssiiggss
                     Allow exporting key signatures marked as "local". This is
                     not generally useful unless a shared  keyring  scheme  is
                     being used.  Defaults to no.


              eexxppoorrtt--aattttrriibbuutteess
                     Include  attribute  user IDs (photo IDs) while exporting.
                     This is useful to export keys if they  are  going  to  be
                     used by an OpenPGP program that does not accept attribute
                     user IDs. Defaults to yes.


              eexxppoorrtt--sseennssiittiivvee--rreevvkkeeyyss
                     Include designated revoker information that was marked as
                     "sensitive". Defaults to no.


              eexxppoorrtt--rreesseett--ssuubbkkeeyy--ppaasssswwdd
                     When  using  the  ----eexxppoorrtt--sseeccrreett--ssuubbkkeeyyss  command,  this
                     option resets the passphrases for all exported subkeys to
                     empty.  This  is useful when the exported subkey is to be
                     used on an unattended machine where a passphrase  doesn't
                     necessarily make sense. Defaults to no.


              eexxppoorrtt--cclleeaann
                     Compact  (remove all signatures from) user IDs on the key
                     being exported if the user IDs are not usable.  Also,  do
                     not  export  any  signatures  that  are  not usable. This
                     includes signatures that were issued by keys that are not
                     present  on  the keyring. This option is the same as run-
                     ning the ----eeddiitt--kkeeyy command "clean" before export  except
                     that  the local copy of the key is not modified. Defaults
                     to no.


              eexxppoorrtt--mmiinniimmaall
                     Export the smallest key possible. This removes all signa-
                     tures  except the most recent self-signature on each user
                     ID. This option is the same  as  running  the  ----eeddiitt--kkeeyy
                     command  "minimize"  before  export except that the local
                     copy of the key is not modified. Defaults to no.


       ----wwiitthh--ccoolloonnss
              Print key listings delimited by colons.  Note  that  the  output
              will  be  encoded  in  UTF-8 regardless of any ----ddiissppllaayy--cchhaarrsseett
              setting. This format is useful when GnuPG is called from scripts
              and  other  programs as it is easily machine parsed. The details
              of this format are documented in the file  '_d_o_c_/_D_E_T_A_I_L_S',  which
              is included in the GnuPG source distribution.


       ----ffiixxeedd--lliisstt--mmooddee
              Do  not  merge  primary  user ID and primary key in ----wwiitthh--ccoolloonn
              listing  mode  and  print  all  timestamps  as   seconds   since
              1970-01-01.


       ----wwiitthh--ffiinnggeerrpprriinntt
              Same as the command ----ffiinnggeerrpprriinntt but changes only the format of
              the output and may be used together with another command.


       ----wwiitthh--kkeeyyggrriipp
              Include the keygrip in the key listings.




   OOppeennPPGGPP pprroottooccooll ssppeecciiffiicc ooppttiioonnss..




       --tt,, ----tteexxttmmooddee

       ----nnoo--tteexxttmmooddee
              Treat input files as text and store them in the OpenPGP  canoni-
              cal  text form with standard "CRLF" line endings. This also sets
              the necessary flags to inform the recipient that  the  encrypted
              or  signed  data is text and may need its line endings converted
              back to whatever the local system uses. This  option  is  useful
              when  communicating  between  two  platforms that have different
              line ending conventions (UNIX-like to Mac, Mac to Windows, etc).
              ----nnoo--tteexxttmmooddee disables this option, and is the default.

              If  --tt  (but  not ----tteexxttmmooddee) is used together with armoring and
              signing, this  enables  clearsigned  messages.  This  kludge  is
              needed for command-line compatibility with command-line versions
              of PGP; normally you would use ----ssiiggnn or ----cclleeaarrssiiggnn  to  select
              the type of the signature.


       ----ffoorrccee--vv33--ssiiggss

       ----nnoo--ffoorrccee--vv33--ssiiggss
              OpenPGP  states that an implementation should generate v4 signa-
              tures but PGP versions 5 through 7 only recognize v4  signatures
              on key material. This option forces v3 signatures for signatures
              on data.  Note that this option implies ----nnoo--aasskk--ssiigg--eexxppiirree, and
              unsets  ----ssiigg--ppoolliiccyy--uurrll,  ----ssiigg--nnoottaattiioonn,  and ----ssiigg--kkeeyysseerrvveerr--
              uurrll, as these features cannot be used with v3 signatures.  ----nnoo--
              ffoorrccee--vv33--ssiiggss disables this option.  Defaults to no.


       ----ffoorrccee--vv44--cceerrttss

       ----nnoo--ffoorrccee--vv44--cceerrttss
              Always  use  v4 key signatures even on v3 keys. This option also
              changes the default hash algorithm for v3 RSA keys from  MD5  to
              SHA-1.  ----nnoo--ffoorrccee--vv44--cceerrttss disables this option.


       ----ffoorrccee--mmddcc
              Force  the use of encryption with a modification detection code.
              This is always used with the newer ciphers (those with a  block-
              size  greater  than  64  bits),  or if all of the recipient keys
              indicate MDC support in their feature flags.


       ----ddiissaabbllee--mmddcc
              Disable the use of the modification detection code. Note that by
              using this option, the encrypted message becomes vulnerable to a
              message modification attack.


       ----ppeerrssoonnaall--cciipphheerr--pprreeffeerreenncceess ssttrriinngg
              Set the list of personal cipher preferences to ssttrriinngg.  Use  ggppgg
              ----vveerrssiioonn to get a list of available algorithms, and use nnoonnee to
              set no preference at all.  This allows the user to safely  over-
              ride  the  algorithm chosen by the recipient key preferences, as
              GPG will only select an algorithm that is usable by all  recipi-
              ents.   The  most highly ranked cipher in this list is also used
              for the ----ssyymmmmeettrriicc encryption command.


       ----ppeerrssoonnaall--ddiiggeesstt--pprreeffeerreenncceess ssttrriinngg
              Set the list of personal digest preferences to ssttrriinngg.  Use  ggppgg
              ----vveerrssiioonn to get a list of available algorithms, and use nnoonnee to
              set no preference at all.  This allows the user to safely  over-
              ride  the  algorithm chosen by the recipient key preferences, as
              GPG will only select an algorithm that is usable by all  recipi-
              ents.   The  most highly ranked digest algorithm in this list is
              also used when signing without encryption (e.g.  ----cclleeaarrssiiggnn  or
              ----ssiiggnn).


       ----ppeerrssoonnaall--ccoommpprreessss--pprreeffeerreenncceess ssttrriinngg
              Set the list of personal compression preferences to ssttrriinngg.  Use
              ggppgg ----vveerrssiioonn to get a list of  available  algorithms,  and  use
              nnoonnee  to  set  no  preference  at  all.  This allows the user to
              safely override the algorithm chosen by the recipient key  pref-
              erences,  as GPG will only select an algorithm that is usable by
              all recipients.  The most highly ranked compression algorithm in
              this  list is also used when there are no recipient keys to con-
              sider (e.g. ----ssyymmmmeettrriicc).


       ----ss22kk--cciipphheerr--aallggoo nnaammee
              Use nnaammee as the cipher algorithm used to  protect  secret  keys.
              The  default  cipher is CAST5. This cipher is also used for con-
              ventional  encryption   if   ----ppeerrssoonnaall--cciipphheerr--pprreeffeerreenncceess   and
              ----cciipphheerr--aallggoo is not given.


       ----ss22kk--ddiiggeesstt--aallggoo nnaammee
              Use nnaammee as the digest algorithm used to mangle the passphrases.
              The default algorithm is SHA-1.


       ----ss22kk--mmooddee nn
              Selects  how  passphrases  are  mangled.  If  nn  is  0  a  plain
              passphrase  (which  is not recommended) will be used, a 1 adds a
              salt to the passphrase and a 3 (the default) iterates the  whole
              process  a  number of times (see --s2k-count).  Unless ----rrffcc11999911
              is used, this mode is also used for conventional encryption.


       ----ss22kk--ccoouunntt nn
              Specify how many times  the  passphrase  mangling  is  repeated.
              This  value  may range between 1024 and 65011712 inclusive.  The
              default is inquired from gpg-agent.  Note that not all values in
              the  1024-65011712  range  are  legal and if an illegal value is
              selected, GnuPG will round up to the nearest legal value.   This
              option is only meaningful if ----ss22kk--mmooddee is 3.





   CCoommpplliiaannccee ooppttiioonnss


       These  options  control  what  GnuPG is compliant to. Only one of these
       options may be active at a time. Note that the default setting of  this
       is  nearly  always the correct one. See the INTEROPERABILITY WITH OTHER
       OPENPGP PROGRAMS section below before using one of these options.



       ----ggnnuuppgg
              Use standard GnuPG behavior. This is essentially OpenPGP  behav-
              ior  (see  ----ooppeennppggpp),  but with some additional workarounds for
              common compatibility problems in different versions of PGP. This
              is the default option, so it is not generally needed, but it may
              be useful to override  a  different  compliance  option  in  the
              gpg.conf file.


       ----ooppeennppggpp
              Reset  all  packet,  cipher and digest options to strict OpenPGP
              behavior. Use this option to reset  all  previous  options  like
              ----ss22kk--**,  ----cciipphheerr--aallggoo,  ----ddiiggeesstt--aallggoo  and  ----ccoommpprreessss--aallggoo to
              OpenPGP compliant values. All PGP workarounds are disabled.


       ----rrffcc44888800
              Reset all packet, cipher and digest options to  strict  RFC-4880
              behavior.  Note  that  this  is  currently  the  same  thing  as
              ----ooppeennppggpp.


       ----rrffcc22444400
              Reset all packet, cipher and digest options to  strict  RFC-2440
              behavior.


       ----rrffcc11999911
              Try to be more RFC-1991 (PGP 2.x) compliant.


       ----ppggpp22 Set  up  all options to be as PGP 2.x compliant as possible, and
              warn if an action is taken (e.g. encrypting to  a  non-RSA  key)
              that will create a message that PGP 2.x will not be able to han-
              dle. Note that `PGP 2.x' here means `MIT PGP 2.6.2'.  There  are
              other  versions  of  PGP 2.x available, but the MIT release is a
              good common baseline.

              This option implies ----rrffcc11999911 ----ddiissaabbllee--mmddcc  ----nnoo--ffoorrccee--vv44--cceerrttss
              ----eessccaappee--ffrroomm--lliinneess ----ffoorrccee--vv33--ssiiggss ----cciipphheerr--aallggoo IIDDEEAA ----ddiiggeesstt--
              aallggoo MMDD55 ----ccoommpprreessss--aallggoo ZZIIPP. It also disables  ----tteexxttmmooddee  when
              encrypting.


       ----ppggpp66 Set  up  all  options to be as PGP 6 compliant as possible. This
              restricts you to  the  ciphers  IDEA  (if  the  IDEA  plugin  is
              installed), 3DES, and CAST5, the hashes MD5, SHA1 and RIPEMD160,
              and the compression algorithms none and ZIP. This also  disables
              --throw-keyids,  and  making  signatures with signing subkeys as
              PGP 6 does not understand signatures made by signing subkeys.

              This option implies ----ddiissaabbllee--mmddcc  ----eessccaappee--ffrroomm--lliinneess  ----ffoorrccee--
              vv33--ssiiggss.


       ----ppggpp77 Set up all options to be as PGP 7 compliant as possible. This is
              identical to ----ppggpp66 except that MDCs are not disabled,  and  the
              list  of  allowable  ciphers  is expanded to add AES128, AES192,
              AES256, and TWOFISH.


       ----ppggpp88 Set up all options to be as PGP 8 compliant as possible.  PGP  8
              is  a  lot closer to the OpenPGP standard than previous versions
              of PGP, so all this  does  is  disable  ----tthhrrooww--kkeeyyiiddss  and  set
              ----eessccaappee--ffrroomm--lliinneess.   All algorithms are allowed except for the
              SHA224, SHA384, and SHA512 digests.





   DDooiinngg tthhiinnggss oonnee uussuuaallllyy ddooeessnn''tt wwaanntt ttoo ddoo..




       --nn

       ----ddrryy--rruunn
              Don't make any changes (this is not completely implemented).


       ----lliisstt--oonnllyy
              Changes the behaviour of some commands. This is  like  ----ddrryy--rruunn
              but different in some cases. The semantic of this command may be
              extended in the future.  Currently  it  only  skips  the  actual
              decryption  pass  and  therefore  enables  a fast listing of the
              encryption keys.


       --ii

       ----iinntteerraaccttiivvee
              Prompt before overwriting any files.


       ----ddeebbuugg--lleevveell _l_e_v_e_l
              Select the debug level for investigating problems. _l_e_v_e_l may  be
              a numeric value or by a keyword:


              nnoonnee   No  debugging at all.  A value of less than 1 may be used
                     instead of the keyword.

              bbaassiicc  Some basic debug messages.  A value between 1 and  2  may
                     be used instead of the keyword.

              aaddvvaanncceedd
                     More verbose debug messages.  A value between 3 and 5 may
                     be used instead of the keyword.

              eexxppeerrtt Even more detailed messages.  A value between 6 and 8 may
                     be used instead of the keyword.

              gguurruu   All  of  the  debug messages you can get. A value greater
                     than 8 may be used instead of the keyword.  The  creation
                     of  hash  tracing files is only enabled if the keyword is
                     used.

       How these messages are mapped to the  actual  debugging  flags  is  not
       specified  and may change with newer releases of this program. They are
       however carefully selected to best aid in debugging.


       ----ddeebbuugg _f_l_a_g_s
              Set debugging flags. All flags are or-ed and _f_l_a_g_s may be  given
              in C syntax (e.g. 0x0042).


       ----ddeebbuugg--aallll
              Set all useful debugging flags.


       ----ddeebbuugg--cccciidd--ddrriivveerr
              Enable  debug  output  from  the included CCID driver for smart-
              cards.  Note that this option is only available on some system.


       ----ffaakkeedd--ssyysstteemm--ttiimmee _e_p_o_c_h
              This option is only useful for testing; it sets the system  time
              back  or  forth  to _e_p_o_c_h which is the number of seconds elapsed
              since the year 1970.  Alternatively _e_p_o_c_h may be given as a full
              ISO time string (e.g. "20070924T154812").


       ----eennaabbllee--pprrooggrreessss--ffiilltteerr
              Enable certain PROGRESS status outputs. This option allows fron-
              tends to display a progress indicator while  gpg  is  processing
              larger files.  There is a slight performance overhead using it.


       ----ssttaattuuss--ffdd nn
              Write  special status strings to the file descriptor nn.  See the
              file DETAILS in the documentation for a listing of them.


       ----ssttaattuuss--ffiillee ffiillee
              Same as ----ssttaattuuss--ffdd, except the status data is written  to  file
              ffiillee.


       ----llooggggeerr--ffdd nn
              Write log output to file descriptor nn and not to STDERR.


       ----lloogg--ffiillee ffiillee

       ----llooggggeerr--ffiillee ffiillee
              Same  as  ----llooggggeerr--ffdd, except the logger data is written to file
              ffiillee.  Note that ----lloogg--ffiillee is only implemented for GnuPG-2.


       ----aattttrriibbuuttee--ffdd nn
              Write attribute subpackets to the file  descriptor  nn.  This  is
              most  useful for use with ----ssttaattuuss--ffdd, since the status messages
              are needed to separate  out  the  various  subpackets  from  the
              stream delivered to the file descriptor.


       ----aattttrriibbuuttee--ffiillee ffiillee
              Same  as ----aattttrriibbuuttee--ffdd, except the attribute data is written to
              file ffiillee.


       ----ccoommmmeenntt ssttrriinngg

       ----nnoo--ccoommmmeennttss
              Use ssttrriinngg as a comment string  in  clear  text  signatures  and
              ASCII armored messages or keys (see ----aarrmmoorr). The default behav-
              ior is not to use a comment string. ----ccoommmmeenntt  may  be  repeated
              multiple  times  to  get multiple comment strings. ----nnoo--ccoommmmeennttss
              removes all comments.  It is a good idea to keep the length of a
              single  comment  below 60 characters to avoid problems with mail
              programs wrapping such lines.  Note that comment lines, like all
              other header lines, are not protected by the signature.


       ----eemmiitt--vveerrssiioonn

       ----nnoo--eemmiitt--vveerrssiioonn
              Force  inclusion  of the version string in ASCII armored output.
              If given once only the name of the program and the major  number
              is  emitted  (default),  given  twice the minor is also emitted,
              given triple the micro is added, and  given  quad  an  operating
              system  identification  is also emitted.  ----nnoo--eemmiitt--vveerrssiioonn dis-
              ables the version line.


       ----ssiigg--nnoottaattiioonn nnaammee==vvaalluuee

       ----cceerrtt--nnoottaattiioonn nnaammee==vvaalluuee

       --NN,, ----sseett--nnoottaattiioonn nnaammee==vvaalluuee
              Put the name value pair into the  signature  as  notation  data.
              nnaammee  must  consist  only of printable characters or spaces, and
              must contain a '@' character in  the  form  keyname@domain.exam-
              ple.com  (substituting  the appropriate keyname and domain name,
              of course).  This is to  help  prevent  pollution  of  the  IETF
              reserved notation namespace. The ----eexxppeerrtt flag overrides the '@'
              check. vvaalluuee may be any printable string; it will be encoded  in
              UTF8,  so  you  should  check that your ----ddiissppllaayy--cchhaarrsseett is set
              correctly. If you prefix nnaammee with an exclamation mark (!),  the
              notation  data  will  be flagged as critical (rfc4880:5.2.3.16).
              ----ssiigg--nnoottaattiioonn sets a notation for data signatures. ----cceerrtt--nnoottaa--
              ttiioonn sets a notation for key signatures (certifications). ----sseett--
              nnoottaattiioonn sets both.

              There are special codes that may be used in notation names. "%k"
              will  be  expanded into the key ID of the key being signed, "%K"
              into the long key ID of the key being signed, "%f" into the fin-
              gerprint  of  the  key being signed, "%s" into the key ID of the
              key making the signature, "%S" into the long key ID of  the  key
              making  the signature, "%g" into the fingerprint of the key mak-
              ing the signature (which might be a subkey), "%p" into the  fin-
              gerprint  of  the  primary  key of the key making the signature,
              "%c" into the signature count from the  OpenPGP  smartcard,  and
              "%%" results in a single "%". %k, %K, and %f are only meaningful
              when making a key signature  (certification),  and  %c  is  only
              meaningful when using the OpenPGP smartcard.


       ----ssiigg--ppoolliiccyy--uurrll ssttrriinngg

       ----cceerrtt--ppoolliiccyy--uurrll ssttrriinngg

       ----sseett--ppoolliiccyy--uurrll ssttrriinngg
              Use  ssttrriinngg  as  a Policy URL for signatures (rfc4880:5.2.3.20).
              If you prefix it with an exclamation mark (!),  the  policy  URL
              packet will be flagged as critical. ----ssiigg--ppoolliiccyy--uurrll sets a pol-
              icy url for data signatures. ----cceerrtt--ppoolliiccyy--uurrll sets a policy url
              for key signatures (certifications). ----sseett--ppoolliiccyy--uurrll sets both.

              The same %-expandos used for notation data are available here as
              well.


       ----ssiigg--kkeeyysseerrvveerr--uurrll ssttrriinngg
              Use ssttrriinngg as a preferred keyserver URL for data signatures.  If
              you  prefix  it  with an exclamation mark (!), the keyserver URL
              packet will be flagged as critical.

              The same %-expandos used for notation data are available here as
              well.


       ----sseett--ffiilleennaammee ssttrriinngg
              Use  ssttrriinngg  as  the  filename  which is stored inside messages.
              This overrides the default, which is to use the actual  filename
              of the file being encrypted.


       ----ffoorr--yyoouurr--eeyyeess--oonnllyy

       ----nnoo--ffoorr--yyoouurr--eeyyeess--oonnllyy
              Set  the  `for  your eyes only' flag in the message. This causes
              GnuPG to refuse to save the file unless the ----oouuttppuutt  option  is
              given,  and PGP to use a "secure viewer" with a claimed Tempest-
              resistant font to display the  message.  This  option  overrides
              ----sseett--ffiilleennaammee.  ----nnoo--ffoorr--yyoouurr--eeyyeess--oonnllyy disables this option.


       ----uussee--eemmbbeeddddeedd--ffiilleennaammee

       ----nnoo--uussee--eemmbbeeddddeedd--ffiilleennaammee
              Try  to  create a file with a name as embedded in the data. This
              can be a dangerous option  as  it  allows  to  overwrite  files.
              Defaults to no.


       ----cciipphheerr--aallggoo nnaammee
              Use  nnaammee as cipher algorithm. Running the program with the com-
              mand ----vveerrssiioonn yields a list of supported algorithms. If this is
              not  used  the cipher algorithm is selected from the preferences
              stored with the key. In general, you do not  want  to  use  this
              option as it allows you to violate the OpenPGP standard.  ----ppeerr--
              ssoonnaall--cciipphheerr--pprreeffeerreenncceess is the safe way to accomplish the  same
              thing.


       ----ddiiggeesstt--aallggoo nnaammee
              Use  nnaammee  as  the message digest algorithm. Running the program
              with the command ----vveerrssiioonn yields  a  list  of  supported  algo-
              rithms.  In  general,  you  do not want to use this option as it
              allows you to violate the OpenPGP  standard.  ----ppeerrssoonnaall--ddiiggeesstt--
              pprreeffeerreenncceess is the safe way to accomplish the same thing.


       ----ccoommpprreessss--aallggoo nnaammee
              Use compression algorithm nnaammee. "zlib" is RFC-1950 ZLIB compres-
              sion. "zip" is RFC-1951 ZIP compression which is  used  by  PGP.
              "bzip2"  is  a  more modern compression scheme that can compress
              some things better than zip or zlib, but at  the  cost  of  more
              memory used during compression and decompression. "uncompressed"
              or "none" disables compression. If this option is not used,  the
              default  behavior is to examine the recipient key preferences to
              see which algorithms the recipient supports. If all else  fails,
              ZIP is used for maximum compatibility.

              ZLIB  may  give better compression results than ZIP, as the com-
              pression window size is not limited to 8k. BZIP2 may  give  even
              better  compression  results  than that, but will use a signifi-
              cantly larger amount of memory while compressing and decompress-
              ing.  This  may  be  significant in low memory situations. Note,
              however, that PGP (all versions) only supports ZIP  compression.
              Using  any algorithm other than ZIP or "none" will make the mes-
              sage unreadable with PGP. In general, you do  not  want  to  use
              this  option  as  it allows you to violate the OpenPGP standard.
              ----ppeerrssoonnaall--ccoommpprreessss--pprreeffeerreenncceess is the safe  way  to  accomplish
              the same thing.


       ----cceerrtt--ddiiggeesstt--aallggoo nnaammee
              Use  nnaammee  as  the  message digest algorithm used when signing a
              key. Running the program with the  command  ----vveerrssiioonn  yields  a
              list  of  supported  algorithms.  Be aware that if you choose an
              algorithm that GnuPG supports but other OpenPGP  implementations
              do  not,  then some users will not be able to use the key signa-
              tures you make, or quite possibly your entire key.


       ----ddiissaabbllee--cciipphheerr--aallggoo nnaammee
              Never allow the use of nnaammee as cipher algorithm.  The given name
              will  not be checked so that a later loaded algorithm will still
              get disabled.


       ----ddiissaabbllee--ppuubbkkeeyy--aallggoo nnaammee
              Never allow the use of nnaammee as public key algorithm.  The  given
              name  will  not be checked so that a later loaded algorithm will
              still get disabled.


       ----tthhrrooww--kkeeyyiiddss

       ----nnoo--tthhrrooww--kkeeyyiiddss
              Do not put the recipient key IDs into encrypted  messages.  This
              helps  to  hide  the  receivers  of the message and is a limited
              countermeasure against traffic analysis. ([Using a little social
              engineering  anyone who is able to decrypt the message can check
              whether one of the other recipients is the  one  he  suspects.])
              On  the  receiving side, it may slow down the decryption process
              because all available secret keys must  be  tried.   ----nnoo--tthhrrooww--
              kkeeyyiiddss disables this option. This option is essentially the same
              as using ----hhiiddddeenn--rreecciippiieenntt for all recipients.


       ----nnoott--ddaasshh--eessccaappeedd
              This option changes the behavior of cleartext signatures so that
              they  can  be  used for patch files. You should not send such an
              armored file via email because all spaces and line  endings  are
              hashed  too.  You  can  not use this option for data which has 5
              dashes at the beginning of a line, patch files don't have  this.
              A  special  armor  header  line tells GnuPG about this cleartext
              signature option.


       ----eessccaappee--ffrroomm--lliinneess

       ----nnoo--eessccaappee--ffrroomm--lliinneess
              Because some mailers change  lines  starting  with  "From  "  to
              ">From  "  it is good to handle such lines in a special way when
              creating cleartext signatures to prevent the  mail  system  from
              breaking  the  signature. Note that all other PGP versions do it
              this way too.  Enabled by default.  ----nnoo--eessccaappee--ffrroomm--lliinneess  dis-
              ables this option.


       ----ppaasssspphhrraassee--rreeppeeaatt nn
              Specify  how  many  times  ggppgg  will request a new passphrase be
              repeated.  This is useful for  helping  memorize  a  passphrase.
              Defaults to 1 repetition.


       ----ppaasssspphhrraassee--ffdd nn
              Read  the passphrase from file descriptor nn. Only the first line
              will be read from file descriptor nn. If you use  0  for  nn,  the
              passphrase  will  be  read  from STDIN. This can only be used if
              only one passphrase is supplied.


       ----ppaasssspphhrraassee--ffiillee ffiillee
              Read the passphrase from file ffiillee. Only the first line will  be
              read  from  file  ffiillee.  This  can  only  be  used  if  only one
              passphrase is supplied. Obviously, a passphrase stored in a file
              is  of  questionable security if other users can read this file.
              Don't use this option if you can avoid it.


       ----ppaasssspphhrraassee ssttrriinngg
              Use ssttrriinngg as the passphrase. This can only be used if only  one
              passphrase  is supplied. Obviously, this is of very questionable
              security on a multi-user system. Don't use this  option  if  you
              can avoid it.


       ----ppiinneennttrryy--mmooddee mmooddee
              Set the pinentry mode to mmooddee.  Allowed values for mmooddee are:

              ddeeffaauulltt
                     Use the default of the agent, which is aasskk.

              aasskk    Force the use of the Pinentry.

              ccaanncceell Emulate use of Pinentry's cancel button.

              eerrrroorr  Return a Pinentry error (``No Pinentry'').

              llooooppbbaacckk
                     Redirect  Pinentry  queries  to the caller.  Note that in
                     contrast to Pinentry the user is not prompted again if he
                     enters a bad password.


       ----ccoommmmaanndd--ffdd nn
              This is a replacement for the deprecated shared-memory IPC mode.
              If this option is  enabled,  user  input  on  questions  is  not
              expected  from  the  TTY  but from the given file descriptor. It
              should  be  used  together  with  ----ssttaattuuss--ffdd.  See   the   file
              doc/DETAILS in the source distribution for details on how to use
              it.


       ----ccoommmmaanndd--ffiillee ffiillee
              Same as ----ccoommmmaanndd--ffdd, except the commands are read out  of  file
              ffiillee


       ----aallllooww--nnoonn--sseellffssiiggnneedd--uuiidd

       ----nnoo--aallllooww--nnoonn--sseellffssiiggnneedd--uuiidd
              Allow  the  import  and  use of keys with user IDs which are not
              self-signed. This is not recommended, as a non self-signed  user
              ID is trivial to forge. ----nnoo--aallllooww--nnoonn--sseellffssiiggnneedd--uuiidd disables.


       ----aallllooww--ffrreeeeffoorrmm--uuiidd
              Disable all checks on the form of the user ID while generating a
              new one. This option should only be used in very  special  envi-
              ronments  as  it does not ensure the de-facto standard format of
              user IDs.


       ----iiggnnoorree--ttiimmee--ccoonnfflliicctt
              GnuPG normally checks that the timestamps associated  with  keys
              and  signatures have plausible values. However, sometimes a sig-
              nature seems to be older than the key  due  to  clock  problems.
              This  option  makes  these  checks  just  a  warning.  See  also
              ----iiggnnoorree--vvaalliidd--ffrroomm for timestamp issues on subkeys.


       ----iiggnnoorree--vvaalliidd--ffrroomm
              GnuPG normally does not select and use subkeys  created  in  the
              future.   This  option  allows  the  use  of  such keys and thus
              exhibits the pre-1.0.7 behaviour. You should not use this option
              unless  there is some clock problem. See also ----iiggnnoorree--ttiimmee--ccoonn--
              fflliicctt for timestamp issues with signatures.


       ----iiggnnoorree--ccrrcc--eerrrroorr
              The ASCII armor used by OpenPGP is protected by a  CRC  checksum
              against  transmission  errors. Occasionally the CRC gets mangled
              somewhere on the transmission channel  but  the  actual  content
              (which  is  protected  by  the OpenPGP protocol anyway) is still
              okay. This option allows GnuPG to ignore CRC errors.


       ----iiggnnoorree--mmddcc--eerrrroorr
              This option changes a MDC integrity protection  failure  into  a
              warning.   This can be useful if a message is partially corrupt,
              but it is necessary to get as much data as possible out  of  the
              corrupt  message.  However, be aware that a MDC protection fail-
              ure may also mean that the message was tampered with  intention-
              ally by an attacker.


       ----nnoo--ddeeffaauulltt--kkeeyyrriinngg
              Do  not  add  the default keyrings to the list of keyrings. Note
              that GnuPG will not operate without any keyrings, so if you  use
              this  option and do not provide alternate keyrings via ----kkeeyyrriinngg
              or ----sseeccrreett--kkeeyyrriinngg, then GnuPG will still use the default  pub-
              lic or secret keyrings.


       ----sskkiipp--vveerriiffyy
              Skip  the  signature verification step. This may be used to make
              the decryption faster  if  the  signature  verification  is  not
              needed.


       ----wwiitthh--kkeeyy--ddaattaa
              Print  key listings delimited by colons (like ----wwiitthh--ccoolloonnss) and
              print the public key data.


       ----ffaasstt--lliisstt--mmooddee
              Changes the output of the list commands to work faster; this  is
              achieved  by  leaving  some parts empty. Some applications don't
              need the user ID and the trust information given  in  the  list-
              ings.  By  using this options they can get a faster listing. The
              exact behaviour of this option may change  in  future  versions.
              If you are missing some information, don't use this option.


       ----nnoo--lliitteerraall
              This  is  not  for normal use. Use the source to see for what it
              might be useful.


       ----sseett--ffiilleessiizzee
              This is not for normal use. Use the source to see  for  what  it
              might be useful.


       ----sshhooww--sseessssiioonn--kkeeyy
              Display  the  session  key used for one message. See ----oovveerrrriiddee--
              sseessssiioonn--kkeeyy for the counterpart of this option.

              We think that Key Escrow is a Bad Thing; however the user should
              have  the freedom to decide whether to go to prison or to reveal
              the content of one specific  message  without  compromising  all
              messages  ever encrypted for one secret key. DON'T USE IT UNLESS
              YOU ARE REALLY FORCED TO DO SO.


       ----oovveerrrriiddee--sseessssiioonn--kkeeyy ssttrriinngg
              Don't use the public key but the session key ssttrriinngg. The  format
              of this string is the same as the one printed by ----sshhooww--sseessssiioonn--
              kkeeyy. This option is normally not used but comes  handy  in  case
              someone  forces  you  to reveal the content of an encrypted mes-
              sage; using this option you can do this without handing out  the
              secret key.


       ----aasskk--ssiigg--eexxppiirree

       ----nnoo--aasskk--ssiigg--eexxppiirree
              When  making a data signature, prompt for an expiration time. If
              this option is  not  specified,  the  expiration  time  set  via
              ----ddeeffaauulltt--ssiigg--eexxppiirree  is used. ----nnoo--aasskk--ssiigg--eexxppiirree disables this
              option.


       ----ddeeffaauulltt--ssiigg--eexxppiirree
              The default expiration time to  use  for  signature  expiration.
              Valid values are "0" for no expiration, a number followed by the
              letter d (for days), w (for weeks), m (for months),  or  y  (for
              years)  (for  example  "2m"  for  two  months,  or "5y" for five
              years), or an absolute date in the form YYYY-MM-DD. Defaults  to
              "0".


       ----aasskk--cceerrtt--eexxppiirree

       ----nnoo--aasskk--cceerrtt--eexxppiirree
              When  making  a key signature, prompt for an expiration time. If
              this option is  not  specified,  the  expiration  time  set  via
              ----ddeeffaauulltt--cceerrtt--eexxppiirree  is  used.  ----nnoo--aasskk--cceerrtt--eexxppiirree  disables
              this option.


       ----ddeeffaauulltt--cceerrtt--eexxppiirree
              The default expiration time to use for key signature expiration.
              Valid values are "0" for no expiration, a number followed by the
              letter d (for days), w (for weeks), m (for months),  or  y  (for
              years)  (for  example  "2m"  for  two  months,  or "5y" for five
              years), or an absolute date in the form YYYY-MM-DD. Defaults  to
              "0".


       ----aallllooww--sseeccrreett--kkeeyy--iimmppoorrtt
              This is an obsolete option and is not used anywhere.


       ----aallllooww--mmuullttiippllee--mmeessssaaggeess

       ----nnoo--aallllooww--mmuullttiippllee--mmeessssaaggeess
              Allow  processing  of  multiple  OpenPGP messages contained in a
              single file or stream.  Some programs that call GPG are not pre-
              pared  to  deal with multiple messages being processed together,
              so this option defaults to no.  Note that versions of GPG  prior
              to 1.4.7 always allowed multiple messages.

              Warning:  Do  not use this option unless you need it as a tempo-
              rary workaround!



       ----eennaabbllee--ssppeecciiaall--ffiilleennaammeess
              This options enables a mode  in  which  filenames  of  the  form
              '_-_&_n',  where  n  is a non-negative decimal number, refer to the
              file descriptor n and not to a file with that name.


       ----nnoo--eexxppeennssiivvee--ttrruusstt--cchheecckkss
              Experimental use only.


       ----pprreesseerrvvee--ppeerrmmiissssiioonnss
              Don't change the permissions of a secret keyring  back  to  user
              read/write  only.  Use  this option only if you really know what
              you are doing.


       ----ddeeffaauulltt--pprreeffeerreennccee--lliisstt ssttrriinngg
              Set the list of default preferences to ssttrriinngg.  This  preference
              list  is used for new keys and becomes the default for "setpref"
              in the edit menu.


       ----ddeeffaauulltt--kkeeyysseerrvveerr--uurrll nnaammee
              Set the default keyserver URL to nnaammee. This  keyserver  will  be
              used as the keyserver URL when writing a new self-signature on a
              key, which includes key generation and changing preferences.


       ----lliisstt--ccoonnffiigg
              Display various internal configuration parameters of GnuPG. This
              option is intended for external programs that call GnuPG to per-
              form tasks, and is thus  not  generally  useful.  See  the  file
              '_d_o_c_/_D_E_T_A_I_L_S'  in  the  source  distribution  for the details of
              which configuration items may be listed. ----lliisstt--ccoonnffiigg  is  only
              usable with ----wwiitthh--ccoolloonnss set.


       ----ggppggccoonnff--lliisstt
              This  command  is  similar  to ----lliisstt--ccoonnffiigg but in general only
              internally used by the ggppggccoonnff tool.


       ----ggppggccoonnff--tteesstt
              This is more or less dummy action.  However it parses  the  con-
              figuration  file  and  returns with failure if the configuration
              file would prevent ggppgg from startup.  Thus it may be used to run
              a syntax check on the configuration file.




   DDeepprreeccaatteedd ooppttiioonnss




       ----llooaadd--eexxtteennssiioonn nnaammee
              Load an extension module. If nnaammee does not contain a slash it is
              searched for in the directory configured when  GnuPG  was  built
              (generally "/usr/local/lib/gnupg"). Extensions are not generally
              useful anymore, and the use of this option is deprecated.


       ----sshhooww--pphhoottooss

       ----nnoo--sshhooww--pphhoottooss
              Causes  ----lliisstt--kkeeyyss,  ----lliisstt--ssiiggss,  ----lliisstt--ppuubblliicc--kkeeyyss,  ----lliisstt--
              sseeccrreett--kkeeyyss, and verifying a signature to also display the photo
              ID attached to the key, if any. See also  ----pphhoottoo--vviieewweerr.  These
              options  are  deprecated.  Use  ----lliisstt--ooppttiioonnss  [[nnoo--]]sshhooww--pphhoottooss
              and/or ----vveerriiffyy--ooppttiioonnss [[nnoo--]]sshhooww--pphhoottooss instead.


       ----sshhooww--kkeeyyrriinngg
              Display the keyring name at the head of  key  listings  to  show
              which keyring a given key resides on. This option is deprecated:
              use ----lliisstt--ooppttiioonnss [[nnoo--]]sshhooww--kkeeyyrriinngg instead.


       ----ccttaappii--ddrriivveerr ffiillee
              Use ffiillee to access the smartcard reader. The current default  is
              `libtowitoko.so'.  Note that the use of this interface is depre-
              cated; it may be removed in future releases.


       ----aallwwaayyss--ttrruusstt
              Identical to ----ttrruusstt--mmooddeell aallwwaayyss. This option is deprecated.


       ----sshhooww--nnoottaattiioonn

       ----nnoo--sshhooww--nnoottaattiioonn
              Show signature notations  in  the  ----lliisstt--ssiiggss  or  ----cchheecckk--ssiiggss
              listings  as  well as when verifying a signature with a notation
              in  it.  These  options  are  deprecated.   Use   ----lliisstt--ooppttiioonnss
              [[nnoo--]]sshhooww--nnoottaattiioonn  and/or  ----vveerriiffyy--ooppttiioonnss  [[nnoo--]]sshhooww--nnoottaattiioonn
              instead.


       ----sshhooww--ppoolliiccyy--uurrll

       ----nnoo--sshhooww--ppoolliiccyy--uurrll
              Show policy URLs in the ----lliisstt--ssiiggss or ----cchheecckk--ssiiggss listings  as
              well  as  when  verifying  a  signature with a policy URL in it.
              These options are deprecated. Use ----lliisstt--ooppttiioonnss  [[nnoo--]]sshhooww--ppooll--
              iiccyy--uurrll and/or ----vveerriiffyy--ooppttiioonnss [[nnoo--]]sshhooww--ppoolliiccyy--uurrll instead.






EEXXAAMMPPLLEESS
       ggppgg --ssee --rr BBoobb ffiillee
              sign and encrypt for user Bob


       ggppgg ----cclleeaarrssiiggnn ffiillee
              make a clear text signature


       ggppgg --ssbb ffiillee
              make a detached signature


       ggppgg --uu 00xx1122334455667788 --ssbb ffiillee
              make a detached signature with the key 0x12345678


       ggppgg ----lliisstt--kkeeyyss uusseerr__IIDD
              show keys


       ggppgg ----ffiinnggeerrpprriinntt uusseerr__IIDD
              show fingerprint


       ggppgg ----vveerriiffyy ppggppffiillee

       ggppgg ----vveerriiffyy ssiiggffiillee
              Verify the signature of the file but do not output the data. The
              second form is used for detached signatures,  where  ssiiggffiillee  is
              the  detached signature (either ASCII armored or binary) and are
              the signed data; if this is not given,  the  name  of  the  file
              holding the signed data is constructed by cutting off the exten-
              sion (".asc" or ".sig") of ssiiggffiillee or by asking the user for the
              filename.




HHOOWW TTOO SSPPEECCIIFFYY AA UUSSEERR IIDD
       There  are  different ways to specify a user ID to GnuPG.  Some of them
       are only valid for ggppgg others are only good for  ggppggssmm.   Here  is  the
       entire list of ways to specify a key:



       BByy kkeeyy IIdd..
              This  format  is  deduced  from the length of the string and its
              content or 00xx prefix. The key Id of an X.509 certificate are the
              low  64  bits  of  its SHA-1 fingerprint.  The use of key Ids is
              just a shortcut, for all automated  processing  the  fingerprint
              should be used.

              When  using ggppgg an exclamation mark (!) may be appended to force
              using the specified primary or secondary key and not to try  and
              calculate which primary or secondary key to use.

              The last four lines of the example give the key ID in their long
              form as internally used by the OpenPGP protocol. You can see the
              long key ID using the option ----wwiitthh--ccoolloonnss.

         234567C4
         0F34E556E
         01347A56A
         0xAB123456

         234AABBCC34567C4
         0F323456784E56EAB
         01AB3FED1347A5612
         0x234AABBCC34567C4




       BByy ffiinnggeerrpprriinntt..
              This  format  is  deduced  from the length of the string and its
              content or the 00xx prefix.  Note, that only the 20  byte  version
              fingerprint  is available with ggppggssmm (i.e. the SHA-1 hash of the
              certificate).

              When using ggppgg an exclamation mark (!) may be appended to  force
              using  the specified primary or secondary key and not to try and
              calculate which primary or secondary key to use.

              The best way to specify a key Id is by  using  the  fingerprint.
              This  avoids  any  ambiguities in case that there are duplicated
              key IDs.

         1234343434343434C434343434343434
         123434343434343C3434343434343734349A3434
         0E12343434343434343434EAB3484343434343434
         0xE12343434343434343434EAB3484343434343434


       ggppggssmm also accepts colons  between  each  pair  of  hexadecimal  digits
       because  this  is the de-facto standard on how to present X.509 finger-
       prints.  ggppgg also allows the use of the space separated  SHA-1  finger-
       print as printed by the key listing commands.


       BByy eexxaacctt mmaattcchh oonn OOppeennPPGGPP uusseerr IIDD..
              This  is denoted by a leading equal sign. It does not make sense
              for X.509 certificates.

         =Heinrich Heine <heinrichh@uni-duesseldorf.de>


       BByy eexxaacctt mmaattcchh oonn aann eemmaaiill aaddddrreessss..
              This is indicated by enclosing the email address  in  the  usual
              way with left and right angles.

         <heinrichh@uni-duesseldorf.de>



       BByy wwoorrdd mmaattcchh..
              All words must match exactly (not case sensitive) but can appear
              in any order in the user ID or a subjects name.  Words  are  any
              sequences  of letters, digits, the underscore and all characters
              with bit 7 set.

         +Heinrich Heine duesseldorf


       BByy eexxaacctt mmaattcchh oonn tthhee ssuubbjjeecctt''ss DDNN..
              This is indicated by a leading slash, directly followed  by  the
              RFC-2253 encoded DN of the subject.  Note that you can't use the
              string printed by "gpgsm --list-keys" because that one  as  been
              reordered and modified for better readability; use --with-colons
              to print the raw (but standard escaped) RFC-2253 string

         /CN=Heinrich Heine,O=Poets,L=Paris,C=FR


       BByy eexxaacctt mmaattcchh oonn tthhee iissssuueerr''ss DDNN..
              This is indicated by a leading hash mark, directly followed by a
              slash  and  then  directly followed by the rfc2253 encoded DN of
              the issuer.  This should return the Root  cert  of  the  issuer.
              See note above.

         #/CN=Root Cert,O=Poets,L=Paris,C=FR



       BByy eexxaacctt mmaattcchh oonn sseerriiaall nnuummbbeerr aanndd iissssuueerr''ss DDNN..
              This  is  indicated  by a hash mark, followed by the hexadecimal
              representation of the serial number, then followed  by  a  slash
              and the RFC-2253 encoded DN of the issuer. See note above.

         #4F03/CN=Root Cert,O=Poets,L=Paris,C=FR


       BByy kkeeyyggrriipp
              This  is indicated by an ampersand followed by the 40 hex digits
              of a keygrip.  ggppggssmm prints the keygrip when using  the  command
              ----dduummpp--cceerrtt.  It does not yet work for OpenPGP keys.

         &D75F22C3F86E355877348498CDC92BD21010A480



       BByy ssuubbssttrriinngg mmaattcchh..
              This is the default mode but applications may want to explicitly
              indicate this by putting the asterisk in front.   Match  is  not
              case sensitive.

         Heine
         *Heine



       Please note that we have reused the hash mark identifier which was used
       in old GnuPG versions to indicate the so called local-id.   It  is  not
       anymore  used  and  there  should  be  no conflict when used with X.509
       stuff.

       Using the RFC-2253 format of DNs has the drawback that it is not possi-
       ble to map them back to the original encoding, however we don't have to
       do this because our key database stores this encoding as meta data.





FFIILLEESS
       There are a few configuration files to control certain aspects of ggppgg's
       operation.  Unless  noted, they are expected in the current home direc-
       tory (see: [option --homedir]).



       ggppgg..ccoonnff
              This is the standard configuration file read by ggppgg on  startup.
              It may contain any valid long option; the leading two dashes may
              not be entered and the option  may  not  be  abbreviated.   This
              default  name  may  be  changed  on the command line (see: [gpg-
              option --options]).  You should backup this file.


       Note that on larger installations, it is useful to put predefined files
       into  the  directory  '_/_e_t_c_/_s_k_e_l_/_._g_n_u_p_g_/'  so  that newly created users
       start up with a working configuration.

       For internal purposes ggppgg creates and maintains a few other files; They
       all  live  in  in the current home directory (see: [option --homedir]).
       Only the ggppgg may modify these files.



       ~~//..ggnnuuppgg//sseeccrriinngg..ggppgg
              The secret keyring.  You should backup this file.


       ~~//..ggnnuuppgg//sseeccrriinngg..ggppgg..lloocckk
              The lock file for the secret keyring.


       ~~//..ggnnuuppgg//ppuubbrriinngg..ggppgg
              The public keyring.  You should backup this file.


       ~~//..ggnnuuppgg//ppuubbrriinngg..ggppgg..lloocckk
              The lock file for the public keyring.


       ~~//..ggnnuuppgg//ttrruussttddbb..ggppgg
              The trust database.  There is no need to backup this file; it is
              better  to  backup the ownertrust values (see: [option --export-
              ownertrust]).


       ~~//..ggnnuuppgg//ttrruussttddbb..ggppgg..lloocckk
              The lock file for the trust database.


       ~~//..ggnnuuppgg//rraannddoomm__sseeeedd
              A file used to preserve the state of the internal random pool.


       //uussrr[[//llooccaall]]//sshhaarree//ggnnuuppgg//ooppttiioonnss..sskkeell
              The skeleton options file.


       //uussrr[[//llooccaall]]//lliibb//ggnnuuppgg//
              Default location for extensions.


       Operation is further controlled by a few environment variables:



       HHOOMMEE   Used to locate the default home directory.


       GGNNUUPPGGHHOOMMEE
              If set directory used instead of "~/.gnupg".


       GGPPGG__AAGGEENNTT__IINNFFOO
              Used to locate the gpg-agent.
                This is only honored when ----uussee--aaggeenntt is set.
                The value consists of 3 colon delimited fields: The  first  is
              the path
                to the Unix Domain Socket, the second the PID of the gpg-agent
              and the
                protocol version which should be set to 1. When  starting  the
              gpg-agent
                as described in its documentation, this variable is set to the
              correct
                value. The option ----ggppgg--aaggeenntt--iinnffoo can be used to override it.


       PPIINNEENNTTRRYY__UUSSEERR__DDAATTAA
              This value is passed via gpg-agent to pinentry.  It is useful to
              convey extra information to a custom pinentry.


       CCOOLLUUMMNNSS

       LLIINNEESS  Used to size some displays to the full size of the screen.



       LLAANNGGUUAAGGEE
              Apart  from  its  use  by  GNU, it is used in the W32 version to
              override the language selection done through the  Registry.   If
              used  and  set  to a valid and available language name (_l_a_n_g_i_d),
              the file with the translation is loaded from

              _g_p_g_d_i_r/gnupg.nls/_l_a_n_g_i_d.mo.  Here _g_p_g_d_i_r is the directory out of
              which the gpg binary has been loaded.  If it can't be loaded the
              Registry is tried and as last resort the native  Windows  locale
              system is used.





BBUUGGSS
       On older systems this program should be installed as setuid(root). This
       is necessary to lock memory pages. Locking memory  pages  prevents  the
       operating   system   from  writing  memory  pages  (which  may  contain
       passphrases or other sensitive material) to disk. If you get no warning
       message  about  insecure  memory your operating system supports locking
       without being root. The program drops root privileges as soon as locked
       memory is allocated.

       Note  also  that  some systems (especially laptops) have the ability to
       ``suspend to disk'' (also known as ``safe  sleep''  or  ``hibernate'').
       This  writes  all  memory to disk before going into a low power or even
       powered off mode.  Unless measures are taken in the operating system to
       protect  the  saved memory, passphrases or other sensitive material may
       be recoverable from it later.

       Before you report a bug you should first search the  mailing  list  ar-
       chives  for  similar  problems  and second check whether such a bug has
       already been reported to our bug tracker at http://bugs.gnupg.org .



SSEEEE AALLSSOO
       ggppggvv(1),

       The full documentation for this tool is maintained as a Texinfo manual.
       If  GnuPG and the info program are properly installed at your site, the
       command

         info gnupg

       should give you access to the complete manual including a  menu  struc-
       ture and an index.



GnuPG 1.4.16                      2015-03-27                            GPG(1)
