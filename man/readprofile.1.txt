READPROFILE(1)                   User Commands                  READPROFILE(1)



NNAAMMEE
       readprofile - read kernel profiling information

SSYYNNOOPPSSIISS
       rreeaaddpprrooffiillee [_o_p_t_i_o_n_s]


VVEERRSSIIOONN
       This manpage documents version 2.0 of the program.


DDEESSCCRRIIPPTTIIOONN
       The  rreeaaddpprrooffiillee  command  uses  the //pprroocc//pprrooffiillee information to print
       ascii data on standard output.  The output is organized in  three  col-
       umns: the first is the number of clock ticks, the second is the name of
       the C function in the kernel where those many ticks occurred,  and  the
       third  is the normalized `load' of the procedure, calculated as a ratio
       between the number of ticks and the length of the procedure. The output
       is filled with blanks to ease readability.


       Available command line options are the following:


       --mm _m_a_p_f_i_l_e
              Specify  a  mapfile,  which  by  default  is //uussrr//ssrrcc//lliinnuuxx//SSyyss--
              tteemm..mmaapp..  You should specify the map file  on  cmdline  if  your
              current  kernel  isn't the last one you compiled, or if you keep
              System.map elsewhere. If the name of  the  map  file  ends  with
              `.gz' it is decompressed on the fly.


       --pp _p_r_o_-_f_i_l_e
              Specify  a  different  profiling  buffer,  which  by  default is
              //pprroocc//pprrooffiillee..  Using a different pro-file is useful if you want
              to `freeze' the kernel profiling at some time and read it later.
              The //pprroocc//pprrooffiillee file can be copied using `cat' or `cp'.  There
              is no more support for compressed profile buffers, like in rreeaadd--
              pprrooffiillee--11..11,, because the program needs to know the size  of  the
              buffer in advance.


       --ii     Info.  This makes rreeaaddpprrooffiillee only print the profiling step used
              by the kernel.  The profiling step is the resolution of the pro-
              filing   buffer,  and  is  chosen  during  kernel  configuration
              (through `make config'), or in the kernel's  command  line.   If
              the  --tt (terse) switch is used together with --ii only the decimal
              number is printed.


       --aa     Print all symbols in the mapfile. By default the procedures with
              0 reported ticks are not printed.


       --bb     Print individual histogram-bin counts.


       --rr     Reset  the  profiling  buffer. This can only be invoked by root,
              because //pprroocc//pprrooffiillee is readable by everybody but writable only
              by the superuser. However, you can make rreeaaddpprrooffiillee setuid 0, in
              order to reset the buffer without gaining privileges.


       --MM _m_u_l_t_i_p_l_i_e_r
              On some architectures it is possible to alter the  frequency  at
              which  the  kernel  delivers  profiling  interrupts to each CPU.
              This option allows you to set the frequency, as a multiplier  of
              the  system  clock frequency, HZ.  This is supported on i386-SMP
              (2.2 and 2.4 kernel) and also on sparc-SMP and sparc64-SMP  (2.4
              kernel).   This  option  also  resets  the profiling buffer, and
              requires superuser privileges.


       --vv     Verbose. The output is organized in four columns and filled with
              blanks.   The  first column is the RAM address of a kernel func-
              tion, the second is the name of the function, the third  is  the
              number of clock ticks and the last is the normalized load.


       --VV     Version.  This  makes  rreeaaddpprrooffiillee  print its version number and
              exit.


EEXXAAMMPPLLEESS
       Browse the profiling buffer ordering by clock ticks:
          readprofile | sort -nr | less

       Print the 20 most loaded procedures:
          readprofile | sort -nr +2 | head -20

       Print only filesystem profile:
          readprofile | grep _ext2

       Look at all the kernel information, with ram addresses"
          readprofile -av | less

       Browse a `freezed' profile buffer for a non current kernel:
          readprofile -p ~/profile.freeze -m /zImage.map.gz

       Request profiling at 2kHz per CPU, and reset the profiling buffer
          sudo readprofile -M 20



BBUUGGSS
       rreeaaddpprrooffiillee  only  works  with  an  1.3.x  or  newer  kernel,   because
       //pprroocc//pprrooffiillee changed in the step from 1.2 to 1.3


       This  program only works with ELF kernels. The change for a.out kernels
       is trivial, and left as an exercise to the a.out user.


       To enable profiling, the kernel must be rebooted, because no  profiling
       module  is  available, and it wouldn't be easy to build. To enable pro-
       filing, you can specify "profile=2" (or another number) on  the  kernel
       commandline.   The  number you specify is the two-exponent used as pro-
       filing step.


       Profiling is disabled when interrupts are inhibited.  This  means  that
       many  profiling  ticks happen when interrupts are re-enabled. Watch out
       for misleading information.


FFIILLEESS
       /proc/profile              A binary snapshot of the profiling buffer.
       /usr/src/linux/System.map  The symbol table for the kernel.
       /usr/src/linux/*           The program being profiled :-)


AAVVAAIILLAABBIILLIITTYY
       The readprofile command is part of the util-linux package and is avail-
       able from ftp://ftp.kernel.org/pub/linux/utils/util-linux/.



4th Berkeley Distribution          May 1996                     READPROFILE(1)
