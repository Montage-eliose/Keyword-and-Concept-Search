CRONTAB(1)                  General Commands Manual                 CRONTAB(1)



NNAAMMEE
       crontab - maintain crontab files for individual users (Vixie Cron)

SSYYNNOOPPSSIISS
       crontab [ -u user ] file
       crontab [ -u user ] [ -i ] { -e | -l | -r }

DDEESSCCRRIIPPTTIIOONN
       _c_r_o_n_t_a_b  is  the  program used to install, deinstall or list the tables
       used to drive the _c_r_o_n(8) daemon in Vixie Cron.   Each  user  can  have
       their    own    crontab,    and    though    these    are    files   in
       /var/spool/cron/crontabs, they are not intended to be edited directly.

       If the _/_e_t_c_/_c_r_o_n_._a_l_l_o_w file exists, then you must be listed  (one  user
       per  line)  therein in order to be allowed to use this command.  If the
       _/_e_t_c_/_c_r_o_n_._a_l_l_o_w file does not exist but the  _/_e_t_c_/_c_r_o_n_._d_e_n_y  file  does
       exist,  then you must nnoott be listed in the _/_e_t_c_/_c_r_o_n_._d_e_n_y file in order
       to use this command.

       If neither of these files exists, then depending on site-dependent con-
       figuration  parameters, only the super user will be allowed to use this
       command, or all users will be able to use this command.

       If both files exist then _/_e_t_c_/_c_r_o_n_._a_l_l_o_w takes precedence. Which  means
       that  _/_e_t_c_/_c_r_o_n_._d_e_n_y  is not considered and your user must be listed in
       _/_e_t_c_/_c_r_o_n_._a_l_l_o_w in order to be able to use the crontab.

       Regardless of the existance of any of these files, the root administra-
       tive  user  is  always allowed to setup a crontab.  For standard Debian
       systems, all users may use this command.

       If the _-_u option is given, it specifies the  name  of  the  user  whose
       crontab  is  to  be  used (when listing) or modified (when editing). If
       this option is not given, _c_r_o_n_t_a_b examines "your"  crontab,  i.e.,  the
       crontab  of the person executing the command.  Note that _s_u(8) can con-
       fuse _c_r_o_n_t_a_b and that if you are running inside  of  _s_u(8)  you  should
       always use the _-_u option for safety's sake.

       The  first  form  of this command is used to install a new crontab from
       some named file or standard  input  if  the  pseudo-filename  ``-''  is
       given.

       The  _-_l  option  causes the current crontab to be displayed on standard
       output. See the note under DDEEBBIIAANN SSPPEECCIIFFIICC below.

       The _-_r option causes the current crontab to be removed.

       The _-_e option is used to edit the  current  crontab  using  the  editor
       specified  by  the  VISUAL  or EDITOR environment variables.  After you
       exit from the editor, the modified crontab will be installed  automati-
       cally.  If  neither  of  the environment variables is defined, then the
       default editor /usr/bin/editor is used.

       The _-_i option modifies the -r option to prompt the  user  for  a  'y/Y'
       response before actually removing the crontab.

DDEEBBIIAANN SSPPEECCIIFFIICC
       The  "out-of-the-box"  behaviour for _c_r_o_n_t_a_b _-_l is to display the three
       line "DO NOT EDIT THIS FILE" header that is placed at the beginning  of
       the  crontab  when  it  is  installed. The problem is that it makes the
       sequence

       crontab -l | crontab -

       non-idempotent -- you keep adding copies of  the  header.  This  causes
       pain  to scripts that use sed to edit a crontab. Therefore, the default
       behaviour of the --ll option has been changed to not output such  header.
       You  may obtain the original behaviour by setting the environment vari-
       able CCRROONNTTAABB__NNOOHHEEAADDEERR to 'N', which will cause the _c_r_o_n_t_a_b  _-_l  command
       to emit the extraneous header.

SSEEEE AALLSSOO
       crontab(5), cron(8)

FFIILLEESS
       /etc/cron.allow
       /etc/cron.deny
       /var/spool/cron/crontabs

       There    is    one   file   for   each   user's   crontab   under   the
       /var/spool/cron/crontabs directory. Users are not allowed to  edit  the
       files  under  that directory directly to ensure that only users allowed
       by the system to run periodic tasks can add them,  and  only  syntacti-
       cally correct crontabs will be written there.  This is enforced by hav-
       ing the directory writable only by the _c_r_o_n_t_a_b  group  and  configuring
       _c_r_o_n_t_a_b command with the setgid bid set for that specific group.

SSTTAANNDDAARRDDSS
       The  _c_r_o_n_t_a_b command conforms to IEEE Std1003.2-1992 (``POSIX'').  This
       new command syntax differs from previous versions  of  Vixie  Cron,  as
       well as from the classic SVR3 syntax.


DDIIAAGGNNOOSSTTIICCSS
       A  fairly  informative  usage  message appears if you run it with a bad
       command line.

       cron requires that each entry in a crontab end in a newline  character.
       If  the  last entry in a crontab is missing the newline, cron will con-
       sider the crontab (at least partially) broken and refuse to install it.


AAUUTTHHOORR
       Paul Vixie <paul@vix.com> is the author of _c_r_o_n and original creator of
       this  manual page. This page has also been modified for Debian by Steve
       Greenland, Javier Fernandez-Sanguino and Christian Kastner.



4th Berkeley Distribution        19 April 2010                      CRONTAB(1)
